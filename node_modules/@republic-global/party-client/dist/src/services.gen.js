import { OpenAPI } from './core/OpenAPI.js';
import { request as __request } from './core/request.js';
/**
 * Get All Parties
 * @returns unknown OK
 * @throws ApiError
 */
export const getParty = () => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/party',
    });
};
/**
 * Get party by ID
 * @param data The data for the request.
 * @param data.id uuid of the party to get
 * @returns BaseParty OK
 * @throws ApiError
 */
export const getPartyById = (data) => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/party/{id}',
        path: {
            id: data.id,
        },
    });
};
/**
 * Get a list of craftspersons by their IDs
 * Retrieve a list of parties and their related craftsperson entities based on the provided IDs.
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown List of craftspeople
 * @throws ApiError
 */
export const postPartyCraftspersonList = (data) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/party/craftsperson-list',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Get a list of the corresponding parties by IDs
 * @param data The data for the request.
 * @param data.requestBody
 * @returns BaseParty OK
 * @throws ApiError
 */
export const postPartyPartyList = (data = {}) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/party/party-list',
        body: data.requestBody,
        mediaType: 'application/json',
    });
};
/**
 * Updates the last seen time
 * Updates the lastSeen property of the authenticated User
 * @returns void Heartbeat processed
 * @throws ApiError
 */
export const postPartyHeartbeat = () => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/party/heartbeat',
    });
};
/**
 * Returns an array with all Organizations
 * @returns Organization OK
 * @throws ApiError
 */
export const getOrganization = () => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/organization',
    });
};
/**
 * Creates a new Organization
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Created
 * @throws ApiError
 */
export const postOrganization = (data = {}) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/organization',
        body: data.requestBody,
        mediaType: 'application/json',
    });
};
/**
 * Retrieves the requested ID Organization's information
 * @param data The data for the request.
 * @param data.id UUID of the Organization to get
 * @returns unknown OK
 * @throws ApiError
 */
export const getOrganizationById = (data) => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/organization/{id}',
        path: {
            id: data.id,
        },
    });
};
/**
 * Update Organization's information
 * @param data The data for the request.
 * @param data.id UUID of the organization to update
 * @param data.requestBody
 * @returns unknown Updated
 * @throws ApiError
 */
export const putOrganizationById = (data) => {
    return __request(OpenAPI, {
        method: 'PUT',
        url: '/organization/{id}',
        path: {
            id: data.id,
        },
        body: data.requestBody,
        mediaType: 'application/json',
    });
};
/**
 * Add member to Organization
 * @param data The data for the request.
 * @param data.id Organization's UUID
 * @param data.requestBody
 * @returns unknown Updated
 * @throws ApiError
 */
export const postOrganizationByIdAdd = (data) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/organization/{id}/add',
        path: {
            id: data.id,
        },
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            404: 'Not Found',
        },
    });
};
/**
 * Remove member from Organization
 * @param data The data for the request.
 * @param data.id Organization's UUID
 * @param data.requestBody
 * @returns unknown Updated
 * @throws ApiError
 */
export const postOrganizationByIdRemove = (data) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/organization/{id}/remove',
        path: {
            id: data.id,
        },
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            404: 'Not Found',
        },
    });
};
/**
 * Get list of craftspeople
 * @returns CraftspersonPartyList Success
 * @throws ApiError
 */
export const getCraftspersonRetrieve = () => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/craftsperson/retrieve',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Create a new Craftsperson profile
 * Create a new Craftsperson profile with the provided information
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Created
 * @throws ApiError
 */
export const postCraftspersonCreate = (data = {}) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/craftsperson/create',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Get Crafts Person by ID
 * @param data The data for the request.
 * @param data.id Crafts Person's UUID
 * @returns CraftspersonPublicProfile OK
 * @throws ApiError
 */
export const getCraftspersonById = (data) => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/craftsperson/{id}',
        path: {
            id: data.id,
        },
        errors: {
            404: 'Not Found',
        },
    });
};
/**
 * Get authenticated craftsperson's resume
 * @returns unknown OK
 * @throws ApiError
 */
export const getCraftspersonResume = () => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/craftsperson/resume',
        errors: {
            401: 'Unauthorized',
            404: 'User not found',
        },
    });
};
/**
 * Update authenticated craftsperson resume information
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Updated
 * @throws ApiError
 */
export const putCraftspersonResume = (data = {}) => {
    return __request(OpenAPI, {
        method: 'PUT',
        url: '/craftsperson/resume',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            401: 'Unauthorized',
        },
    });
};
/**
 * Get authenticated craftsperson's profile information
 * @returns CraftspersonProfileInfo OK
 * @throws ApiError
 */
export const getCraftspersonProfile = () => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/craftsperson/profile',
        errors: {
            401: 'Unauthorized',
            404: 'Not found',
        },
    });
};
/**
 * Update authenticated craftsperson's profile information
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown OK
 * @throws ApiError
 */
export const putCraftspersonProfile = (data = {}) => {
    return __request(OpenAPI, {
        method: 'PUT',
        url: '/craftsperson/profile',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            401: 'Unauthorized',
            404: 'Not found',
        },
    });
};
/**
 * Retrieves the portfolio items
 * Retrieves a list of the requested CraftsPerson's portfolio items
 * @param data The data for the request.
 * @param data.id Client's UUID
 * @returns PortfolioItem Success
 * @throws ApiError
 */
export const getCraftspersonByIdPortfolio = (data) => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/craftsperson/{id}/portfolio',
        path: {
            id: data.id,
        },
    });
};
/**
 * Get personal account data
 * @returns AccountData OK
 * @throws ApiError
 */
export const getPartyAccount = () => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/party/account',
    });
};
/**
 * Update personal phone number
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Updated
 * @throws ApiError
 */
export const putPartyPhone = (data = {}) => {
    return __request(OpenAPI, {
        method: 'PUT',
        url: '/party/phone',
        body: data.requestBody,
        mediaType: 'application/json',
    });
};
/**
 * Get All Clients
 * @returns ClientsList OK
 * @throws ApiError
 */
export const getClient = () => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/client',
    });
};
/**
 * Create New Client
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Updated
 * @throws ApiError
 */
export const postClient = (data = {}) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/client',
        body: data.requestBody,
        mediaType: 'application/json',
    });
};
//# sourceMappingURL=services.gen.js.map