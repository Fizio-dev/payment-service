import type { CancelablePromise } from './core/CancelablePromise.js';
import type { GetClientResponse, GetCraftspersonByIdData, GetCraftspersonByIdPortfolioData, GetCraftspersonByIdPortfolioResponse, GetCraftspersonByIdResponse, GetCraftspersonProfileResponse, GetCraftspersonResumeResponse, GetCraftspersonRetrieveResponse, GetOrganizationByIdData, GetOrganizationByIdResponse, GetOrganizationResponse, GetPartyAccountResponse, GetPartyByIdData, GetPartyByIdResponse, GetPartyResponse, PostClientData, PostClientResponse, PostCraftspersonCreateData, PostCraftspersonCreateResponse, PostOrganizationByIdAddData, PostOrganizationByIdAddResponse, PostOrganizationByIdRemoveData, PostOrganizationByIdRemoveResponse, PostOrganizationData, PostOrganizationResponse, PostPartyCraftspersonListData, PostPartyCraftspersonListResponse, PostPartyHeartbeatResponse, PostPartyPartyListData, PostPartyPartyListResponse, PutCraftspersonProfileData, PutCraftspersonProfileResponse, PutCraftspersonResumeData, PutCraftspersonResumeResponse, PutOrganizationByIdData, PutOrganizationByIdResponse, PutPartyPhoneData, PutPartyPhoneResponse } from './types.gen.js';
/**
 * Get All Parties
 * @returns unknown OK
 * @throws ApiError
 */
export declare const getParty: () => CancelablePromise<GetPartyResponse>;
/**
 * Get party by ID
 * @param data The data for the request.
 * @param data.id uuid of the party to get
 * @returns BaseParty OK
 * @throws ApiError
 */
export declare const getPartyById: (data: GetPartyByIdData) => CancelablePromise<GetPartyByIdResponse>;
/**
 * Get a list of craftspersons by their IDs
 * Retrieve a list of parties and their related craftsperson entities based on the provided IDs.
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown List of craftspeople
 * @throws ApiError
 */
export declare const postPartyCraftspersonList: (data: PostPartyCraftspersonListData) => CancelablePromise<PostPartyCraftspersonListResponse>;
/**
 * Get a list of the corresponding parties by IDs
 * @param data The data for the request.
 * @param data.requestBody
 * @returns BaseParty OK
 * @throws ApiError
 */
export declare const postPartyPartyList: (data?: PostPartyPartyListData) => CancelablePromise<PostPartyPartyListResponse>;
/**
 * Updates the last seen time
 * Updates the lastSeen property of the authenticated User
 * @returns void Heartbeat processed
 * @throws ApiError
 */
export declare const postPartyHeartbeat: () => CancelablePromise<PostPartyHeartbeatResponse>;
/**
 * Returns an array with all Organizations
 * @returns Organization OK
 * @throws ApiError
 */
export declare const getOrganization: () => CancelablePromise<GetOrganizationResponse>;
/**
 * Creates a new Organization
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Created
 * @throws ApiError
 */
export declare const postOrganization: (data?: PostOrganizationData) => CancelablePromise<PostOrganizationResponse>;
/**
 * Retrieves the requested ID Organization's information
 * @param data The data for the request.
 * @param data.id UUID of the Organization to get
 * @returns unknown OK
 * @throws ApiError
 */
export declare const getOrganizationById: (data: GetOrganizationByIdData) => CancelablePromise<GetOrganizationByIdResponse>;
/**
 * Update Organization's information
 * @param data The data for the request.
 * @param data.id UUID of the organization to update
 * @param data.requestBody
 * @returns unknown Updated
 * @throws ApiError
 */
export declare const putOrganizationById: (data: PutOrganizationByIdData) => CancelablePromise<PutOrganizationByIdResponse>;
/**
 * Add member to Organization
 * @param data The data for the request.
 * @param data.id Organization's UUID
 * @param data.requestBody
 * @returns unknown Updated
 * @throws ApiError
 */
export declare const postOrganizationByIdAdd: (data: PostOrganizationByIdAddData) => CancelablePromise<PostOrganizationByIdAddResponse>;
/**
 * Remove member from Organization
 * @param data The data for the request.
 * @param data.id Organization's UUID
 * @param data.requestBody
 * @returns unknown Updated
 * @throws ApiError
 */
export declare const postOrganizationByIdRemove: (data: PostOrganizationByIdRemoveData) => CancelablePromise<PostOrganizationByIdRemoveResponse>;
/**
 * Get list of craftspeople
 * @returns CraftspersonPartyList Success
 * @throws ApiError
 */
export declare const getCraftspersonRetrieve: () => CancelablePromise<GetCraftspersonRetrieveResponse>;
/**
 * Create a new Craftsperson profile
 * Create a new Craftsperson profile with the provided information
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Created
 * @throws ApiError
 */
export declare const postCraftspersonCreate: (data?: PostCraftspersonCreateData) => CancelablePromise<PostCraftspersonCreateResponse>;
/**
 * Get Crafts Person by ID
 * @param data The data for the request.
 * @param data.id Crafts Person's UUID
 * @returns CraftspersonPublicProfile OK
 * @throws ApiError
 */
export declare const getCraftspersonById: (data: GetCraftspersonByIdData) => CancelablePromise<GetCraftspersonByIdResponse>;
/**
 * Get authenticated craftsperson's resume
 * @returns unknown OK
 * @throws ApiError
 */
export declare const getCraftspersonResume: () => CancelablePromise<GetCraftspersonResumeResponse>;
/**
 * Update authenticated craftsperson resume information
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Updated
 * @throws ApiError
 */
export declare const putCraftspersonResume: (data?: PutCraftspersonResumeData) => CancelablePromise<PutCraftspersonResumeResponse>;
/**
 * Get authenticated craftsperson's profile information
 * @returns CraftspersonProfileInfo OK
 * @throws ApiError
 */
export declare const getCraftspersonProfile: () => CancelablePromise<GetCraftspersonProfileResponse>;
/**
 * Update authenticated craftsperson's profile information
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown OK
 * @throws ApiError
 */
export declare const putCraftspersonProfile: (data?: PutCraftspersonProfileData) => CancelablePromise<PutCraftspersonProfileResponse>;
/**
 * Retrieves the portfolio items
 * Retrieves a list of the requested CraftsPerson's portfolio items
 * @param data The data for the request.
 * @param data.id Client's UUID
 * @returns PortfolioItem Success
 * @throws ApiError
 */
export declare const getCraftspersonByIdPortfolio: (data: GetCraftspersonByIdPortfolioData) => CancelablePromise<GetCraftspersonByIdPortfolioResponse>;
/**
 * Get personal account data
 * @returns AccountData OK
 * @throws ApiError
 */
export declare const getPartyAccount: () => CancelablePromise<GetPartyAccountResponse>;
/**
 * Update personal phone number
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Updated
 * @throws ApiError
 */
export declare const putPartyPhone: (data?: PutPartyPhoneData) => CancelablePromise<PutPartyPhoneResponse>;
/**
 * Get All Clients
 * @returns ClientsList OK
 * @throws ApiError
 */
export declare const getClient: () => CancelablePromise<GetClientResponse>;
/**
 * Create New Client
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Updated
 * @throws ApiError
 */
export declare const postClient: (data?: PostClientData) => CancelablePromise<PostClientResponse>;
//# sourceMappingURL=services.gen.d.ts.map