export declare const $ClientsList: {
    readonly type: "array";
    readonly items: {
        readonly allOf: readonly [{
            readonly $ref: "#/components/schemas/BaseParty";
        }];
    };
};
export declare const $OrganizationInfo: {
    readonly type: "object";
    readonly properties: {
        readonly size: {
            readonly type: "number";
        };
        readonly founded: {
            readonly type: "string";
        };
        readonly phone: {
            readonly type: "string";
        };
        readonly category: {
            readonly type: "string";
        };
    };
};
export declare const $OrganizationInput: {
    readonly type: "object";
    readonly properties: {
        readonly name: {
            readonly type: "string";
        };
        readonly description: {
            readonly type: "string";
        };
        readonly email: {
            readonly type: "string";
        };
        readonly address: {
            readonly $ref: "#/components/schemas/AddressInput";
        };
        readonly imageLink: {
            readonly type: "string";
        };
        readonly socialLinks: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/SocialMediaInput";
            };
        };
        readonly size: {
            readonly type: "number";
        };
        readonly founded: {
            readonly type: "string";
        };
        readonly phone: {
            readonly type: "string";
        };
        readonly category: {
            readonly type: "string";
        };
    };
};
export declare const $Organization: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "string";
        };
        readonly size: {
            readonly type: "number";
        };
        readonly founded: {
            readonly type: "string";
        };
        readonly phone: {
            readonly type: "string";
        };
        readonly category: {
            readonly type: "string";
        };
    };
};
export declare const $PartyFullData: {
    readonly allOf: readonly [{
        readonly $ref: "#/components/schemas/BaseParty";
    }, {
        readonly type: "object";
        readonly properties: {
            readonly craftsPerson: {
                readonly $ref: "#/components/schemas/CraftsPersonFullData";
            };
        };
    }];
};
export declare const $PartyInput: {
    readonly type: "object";
    readonly properties: {
        readonly name: {
            readonly type: "string";
        };
        readonly role: {
            readonly type: "string";
        };
        readonly description: {
            readonly type: "string";
        };
        readonly email: {
            readonly type: "string";
        };
        readonly imageLink: {
            readonly type: "string";
        };
        readonly address: {
            readonly $ref: "#/components/schemas/AddressInput";
        };
        readonly socialLinks: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/SocialMediaInput";
            };
        };
    };
};
export declare const $AddressInput: {
    readonly type: "object";
    readonly properties: {
        readonly street: {
            readonly type: "string";
            readonly example: "Legacy street";
        };
        readonly state: {
            readonly type: "string";
            readonly example: "Nevada";
        };
        readonly postalCode: {
            readonly type: "string";
            readonly example: 12345;
        };
        readonly city: {
            readonly type: "string";
            readonly example: "Las Vegas";
        };
        readonly country: {
            readonly type: "string";
            readonly example: "UK";
        };
    };
};
export declare const $SocialMediaInput: {
    readonly type: "object";
    readonly properties: {
        readonly title: {
            readonly type: "string";
            readonly example: "X";
        };
        readonly link: {
            readonly type: "string";
            readonly example: "https://twitter.com/@martinfowler";
        };
    };
    readonly required: readonly ["title", "link"];
};
export declare const $Address: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "number";
        };
        readonly street: {
            readonly type: "string";
        };
        readonly city: {
            readonly type: "string";
        };
        readonly state: {
            readonly type: "string";
        };
        readonly country: {
            readonly type: "string";
        };
        readonly postalCode: {
            readonly type: "string";
        };
        readonly number: {
            readonly type: "number";
        };
    };
    readonly example: {
        readonly id: "55d2db4d-8824-49cd-b754-cf6c81385d90";
        readonly street: "Cavara";
        readonly city: "San Jose";
        readonly state: "Pensylvania";
        readonly country: "Santo Domingo";
        readonly postalCode: "1234ABC";
        readonly numer: 13;
    };
};
export declare const $SocialMedia: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "number";
        };
        readonly title: {
            readonly type: "string";
        };
        readonly link: {
            readonly type: "string";
        };
    };
    readonly example: {
        readonly id: 2;
        readonly title: "LinkedIn";
        readonly link: "https://linkedin.com/@john123";
    };
};
export declare const $CraftsPerson: {
    readonly type: "object";
    readonly properties: {
        readonly craftspersonId: {
            readonly type: "string";
            readonly example: "8eaf4ae6-cd83-46b0-9534-ea76aad06864";
        };
        readonly resumeLink: {
            readonly type: "string";
            readonly example: "https://my.resume.example.com/";
        };
        readonly introduction: {
            readonly type: "string";
            readonly example: "I am a skillful craftsperson with x years of experience";
        };
        readonly videoLink: {
            readonly type: "string";
            readonly example: "https://my.video.link.example.com/";
        };
        readonly payment: {
            readonly type: "number";
            readonly example: 200;
        };
        readonly paymentType: {
            readonly type: "string";
            readonly enum: readonly ["HOURLY", "FIXED", "PRIZE"];
        };
    };
};
export declare const $CraftspersonProfile: {
    readonly allOf: readonly [{
        readonly type: "object";
        readonly properties: {
            readonly ccId: {
                readonly type: "string";
                readonly example: "c19ba2a3-e9d2-4426-ad0a-33f7bdc8cb5d";
            };
            readonly name: {
                readonly type: "string";
                readonly example: "Bob";
            };
            readonly surname: {
                readonly type: "string";
                readonly example: "Martin";
            };
            readonly title: {
                readonly type: "string";
                readonly example: "King of the world";
            };
            readonly imageLink: {
                readonly type: "string";
                readonly example: "https://my.image.example.com";
            };
            readonly address: {
                readonly $ref: "#/components/schemas/Address";
            };
            readonly skills: {
                readonly type: "array";
                readonly items: {
                    readonly $ref: "#/components/schemas/Skill";
                };
            };
            readonly lastSeen: {
                readonly type: "string";
                readonly example: "2024-06-12T10:16:59.407Z";
            };
        };
    }, {
        readonly $ref: "#/components/schemas/CraftsPerson";
    }];
};
export declare const $CraftsPersonFullData: {
    readonly allOf: readonly [{
        readonly $ref: "#/components/schemas/CraftsPerson";
    }, {
        readonly type: "object";
        readonly properties: {
            readonly skills: {
                readonly type: "array";
                readonly items: {
                    readonly $ref: "#/components/schemas/Skill";
                };
            };
            readonly education: {
                readonly type: "array";
                readonly items: {
                    readonly $ref: "#/components/schemas/Education";
                };
            };
            readonly workExperience: {
                readonly type: "array";
                readonly items: {
                    readonly $ref: "#/components/schemas/WorkExperience";
                };
            };
            readonly portfolio: {
                readonly type: "array";
                readonly items: {
                    readonly $ref: "#/components/schemas/Portfolio";
                };
            };
        };
    }];
};
export declare const $CraftsPersonPartyInput: {
    readonly allOf: readonly [{
        readonly $ref: "#/components/schemas/PartyInput";
    }, {
        readonly type: "object";
        readonly properties: {
            readonly age: {
                readonly type: "number";
            };
            readonly resumeLink: {
                readonly type: "string";
            };
            readonly videoLink: {
                readonly type: "string";
            };
        };
    }];
};
export declare const $CraftspersonResumeInfo: {
    readonly allOf: readonly [{
        readonly type: "object";
        readonly properties: {
            readonly ccId: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly name: {
                readonly type: "string";
                readonly example: "Linus";
            };
            readonly surname: {
                readonly type: "string";
                readonly example: "Trovald";
            };
            readonly birthdate: {
                readonly type: "string";
                readonly format: "date-time";
            };
            readonly imageUrl: {
                readonly type: "string";
                readonly example: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Robert_C._Martin_surrounded_by_computers.jpg/762px-Robert_C._Martin_surrounded_by_computers.jpg";
            };
            readonly socialMedia: {
                readonly type: "array";
                readonly items: {
                    readonly $ref: "#/components/schemas/SocialMediaInput";
                };
            };
            readonly address: {
                readonly $ref: "#/components/schemas/AddressInput";
            };
            readonly qualification: {
                readonly $ref: "#/components/schemas/QualificationEnum";
            };
            readonly skills: {
                readonly type: "array";
                readonly items: {
                    readonly $ref: "#/components/schemas/SkillInput";
                };
            };
        };
    }, {
        readonly $ref: "#/components/schemas/CraftspersonUpdateInput";
    }];
};
export declare const $CraftspersonUpdateInput: {
    readonly type: "object";
    readonly properties: {
        readonly resumeLink: {
            readonly type: "string";
            readonly example: "https://my.resume.link.example";
        };
        readonly payment: {
            readonly type: "number";
            readonly example: 200;
        };
        readonly paymentType: {
            readonly $ref: "#/components/schemas/PaymentTypeEnum";
        };
        readonly introduction: {
            readonly type: "string";
            readonly example: "I am a very professional drying paint watcher";
        };
        readonly videoLink: {
            readonly type: "string";
            readonly example: "https://my.video.link.example";
        };
        readonly education: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/EducationInput";
            };
        };
        readonly workExperience: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/WorkExperienceInput";
            };
        };
        readonly portfolio: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/PortfolioInput";
            };
        };
    };
    readonly required: readonly ["resumeLink", "payment", "paymentType", "introduction", "videoLink", "education", "workExperience", "portfolio"];
};
export declare const $SkillInput: {
    readonly type: "object";
    readonly properties: {
        readonly name: {
            readonly type: "string";
            readonly example: "Dry paint watching";
        };
        readonly proficiency: {
            readonly type: "number";
            readonly example: 5;
        };
    };
};
export declare const $WorkExperienceInput: {
    readonly type: "object";
    readonly properties: {
        readonly title: {
            readonly type: "string";
            readonly example: "Lead drying paint watcher";
        };
        readonly company: {
            readonly type: "string";
            readonly example: "Microsoft";
        };
        readonly startDate: {
            readonly type: "string";
            readonly example: "2024-05-30T15:05:10.448Z";
        };
        readonly endDate: {
            readonly type: "string";
            readonly example: "2024-05-30T15:05:10.448Z";
        };
        readonly description: {
            readonly type: "string";
            readonly example: "I spent 10 days as a lead drying paint watcher...";
        };
    };
};
export declare const $PortfolioInput: {
    readonly type: "object";
    readonly properties: {
        readonly title: {
            readonly type: "string";
            readonly example: "Blue paint dry";
        };
        readonly imageLink: {
            readonly type: "string";
            readonly example: "https://blue.dry.paint.example";
        };
        readonly description: {
            readonly type: "string";
            readonly example: "I watched this blue painted wall dry for 5 days";
        };
        readonly url: {
            readonly type: "string";
            readonly example: "https://blue.dry.paint.project.example";
        };
    };
};
export declare const $EducationInput: {
    readonly type: "object";
    readonly properties: {
        readonly title: {
            readonly type: "string";
            readonly example: "Master of dry paint";
        };
        readonly academy: {
            readonly type: "string";
            readonly example: "Harvard";
        };
        readonly startDate: {
            readonly type: "string";
            readonly example: "2024-05-30T15:05:10.448Z";
        };
        readonly endDate: {
            readonly type: "string";
            readonly example: "2024-05-30T15:05:10.448Z";
        };
        readonly description: {
            readonly type: "string";
            readonly example: "I spend 4 years at Harvard mastering the art of drying paint watching";
        };
        readonly educationLevel: {
            readonly $ref: "#/components/schemas/QualificationEnum";
        };
    };
};
export declare const $Client: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "string";
        };
        readonly organization_id: {
            readonly type: "string";
        };
    };
};
export declare const $ClientPartyInput: {
    readonly allOf: readonly [{
        readonly $ref: "#/components/schemas/PartyInput";
    }];
};
export declare const $ClientInput: {
    readonly type: "object";
    readonly properties: {
        readonly organizations: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
    };
};
export declare const $Education: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "number";
            readonly example: 1;
        };
        readonly title: {
            readonly type: "string";
            readonly example: "Master on applied engineering";
        };
        readonly accademy: {
            readonly type: "string";
            readonly example: "Greendale";
        };
        readonly dateStart: {
            readonly type: "string";
            readonly example: "2024-06-12T12:26:47.336Z";
        };
        readonly dateEnd: {
            readonly type: "string";
            readonly example: "2024-06-12T12:26:47.336Z";
        };
        readonly level: {
            readonly enum: readonly ["ASSOCIATE", "BACHELOR", "MASTER", "DOCTOR"];
            readonly example: "MASTER";
        };
    };
};
export declare const $PortfolioItem: {
    readonly type: "object";
    readonly properties: {
        readonly title: {
            readonly type: "string";
            readonly example: "My Awesome project";
        };
        readonly description: {
            readonly type: "string";
            readonly example: "I made a clay puppet with blue clay";
        };
        readonly imageLink: {
            readonly type: "string";
            readonly example: "https://image.link.example";
        };
        readonly url: {
            readonly type: "string";
            readonly example: "https://my.clay.puppet.example";
        };
    };
    readonly required: readonly ["title", "imageLink", "url"];
};
export declare const $Portfolio: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "number";
        };
        readonly title: {
            readonly type: "string";
        };
        readonly imageLink: {
            readonly type: "string";
        };
        readonly description: {
            readonly type: "string";
        };
    };
};
export declare const $WorkExperience: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "number";
        };
        readonly title: {
            readonly type: "string";
        };
        readonly company: {
            readonly type: "string";
        };
        readonly dateStart: {
            readonly type: "string";
        };
        readonly dateEnd: {
            readonly type: "string";
        };
    };
};
export declare const $Skill: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "number";
        };
        readonly name: {
            readonly type: "string";
        };
        readonly proficiency: {
            readonly type: "number";
        };
    };
    readonly example: {
        readonly id: "2";
        readonly name: "Woodpecking";
        readonly proficiency: 5;
    };
};
export declare const $BaseParty: {
    readonly type: "object";
    readonly properties: {
        readonly ccId: {
            readonly type: "string";
            readonly example: "eb3c671d-a870-4bcc-9f74-8634e2ca30c9";
        };
        readonly name: {
            readonly type: "string";
            readonly example: "John";
        };
        readonly surname: {
            readonly type: "string";
            readonly example: "Doe";
        };
        readonly birthdate: {
            readonly type: "string";
            readonly example: "2024-06-10T11:34:23.007Z";
        };
        readonly description: {
            readonly type: "string";
            readonly example: "I am a talented drying paint watcher";
        };
        readonly title: {
            readonly type: "string";
            readonly example: "Micro Influencer";
        };
        readonly email: {
            readonly type: "string";
            readonly example: "john@doe.example";
        };
        readonly countryCode: {
            readonly type: "string";
            readonly example: "US";
        };
        readonly phone: {
            readonly type: "string";
            readonly example: 892324829;
        };
        readonly partyType: {
            readonly type: "string";
            readonly example: "Individual";
        };
        readonly imageLink: {
            readonly type: "string";
            readonly example: "https://profile.pic.example";
        };
        readonly lastSeen: {
            readonly type: "string";
            readonly example: "2024-05-30T08:43:03.864Z";
        };
    };
};
export declare const $CraftspersonWithSkills: {
    readonly type: "object";
    readonly properties: {
        readonly resumeLink: {
            readonly type: "string";
        };
        readonly videoLink: {
            readonly type: "string";
        };
        readonly payment: {
            readonly type: "number";
        };
        readonly paymentType: {
            readonly type: "string";
        };
        readonly skills: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/SkillInfo";
            };
        };
    };
};
export declare const $PartyCraftsListItem: {
    readonly allOf: readonly [{
        readonly $ref: "#/components/schemas/BaseParty";
    }, {
        readonly $ref: "#/components/schemas/CraftspersonWithSkills";
    }, {
        readonly type: "object";
        readonly properties: {
            readonly address: {
                readonly $ref: "#/components/schemas/AddressInfo";
            };
            readonly portfolio: {
                readonly type: "array";
                readonly items: {
                    readonly $ref: "#/components/schemas/PortfolioItem";
                };
            };
        };
    }];
};
export declare const $CreateParty: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "string";
            readonly format: "uuid";
        };
        readonly name: {
            readonly type: "string";
            readonly example: "Steve";
        };
        readonly surname: {
            readonly type: "string";
            readonly example: "Stevenson";
        };
        readonly email: {
            readonly type: "string";
            readonly example: "steve@example.com";
        };
        readonly country: {
            readonly type: "string";
            readonly example: "Fiji";
        };
    };
    readonly required: readonly ["name", "id", "email", "surname", "country"];
};
export declare const $AccountData: {
    readonly type: "object";
    readonly properties: {
        readonly name: {
            readonly type: "string";
            readonly example: "Bob";
        };
        readonly surname: {
            readonly type: "string";
            readonly example: "Martin";
        };
        readonly email: {
            readonly type: "string";
            readonly example: "unclebob@aol.com";
        };
        readonly phone: {
            readonly type: "string";
            readonly example: 892324829;
        };
    };
    readonly required: readonly ["name", "surname", "email", "phone"];
};
export declare const $CraftspersonProfileView: {
    readonly type: "object";
    readonly allOf: readonly [{
        readonly type: "object";
        readonly properties: {
            readonly ccId: {
                readonly type: "string";
                readonly example: "8a57ca82-c563-448e-a64a-fd203b89bec5";
            };
            readonly name: {
                readonly type: "string";
                readonly example: "Robert";
            };
            readonly surname: {
                readonly type: "string";
                readonly example: "Martin";
            };
            readonly imageLink: {
                readonly type: "string";
                readonly example: "https://my.image.example.com";
            };
            readonly address: {
                readonly $ref: "#/components/schemas/Address";
            };
            readonly socialMedia: {
                readonly type: "array";
                readonly items: {
                    readonly $ref: "#/components/schemas/SocialMedia";
                };
            };
            readonly joinDate: {
                readonly type: "string";
            };
            readonly qualification: {
                readonly type: "string";
                readonly example: "Master";
            };
            readonly birthdate: {
                readonly type: "string";
                readonly example: "2024-06-06T11:22:27.765Z";
            };
            readonly education: {
                readonly type: "array";
                readonly items: {
                    readonly $ref: "#/components/schemas/Education";
                };
            };
            readonly workExperience: {
                readonly type: "array";
                readonly items: {
                    readonly $ref: "#/components/schemas/WorkExperienceInput";
                };
            };
            readonly skills: {
                readonly type: "array";
                readonly items: {
                    readonly $ref: "#/components/schemas/Skill";
                };
            };
            readonly portfolio: {
                readonly type: "array";
                readonly items: {
                    readonly $ref: "#/components/schemas/Portfolio";
                };
            };
        };
    }, {
        readonly $ref: "#/components/schemas/CraftsPerson";
    }];
};
export declare const $CraftspersonProfileInfo: {
    readonly type: "object";
    readonly properties: {
        readonly craftspersonId: {
            readonly type: "string";
            readonly example: "fce812f8-c98c-43d5-b5cb-fa77c84b1fd2";
        };
        readonly imageUrl: {
            readonly type: "string";
            readonly example: "https://martinfowler.com/img/mf-dallas.jpg";
        };
        readonly name: {
            readonly type: "string";
            readonly example: "Martin";
        };
        readonly surname: {
            readonly type: "string";
            readonly example: "Fowler";
        };
        readonly title: {
            readonly type: "string";
            readonly example: "Software Engineer";
        };
        readonly birthdate: {
            readonly type: "string";
            readonly example: "2024-06-06T11:22:27.765Z";
        };
        readonly address: {
            readonly $ref: "#/components/schemas/AddressInfo";
        };
        readonly skills: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/SkillInput";
            };
        };
        readonly overview: {
            readonly type: "string";
        };
        readonly socialMedia: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/SocialMediaInput";
            };
        };
    };
};
export declare const $CraftspersonProfileUpdate: {
    readonly type: "object";
    readonly properties: {
        readonly imageUrl: {
            readonly type: "string";
            readonly example: "https://martinfowler.com/img/mf-dallas.jpg";
        };
        readonly title: {
            readonly type: "string";
            readonly example: "Software Engineer";
        };
        readonly birthdate: {
            readonly type: "string";
            readonly example: "2024-06-06T11:22:27.765Z";
        };
        readonly overview: {
            readonly type: "string";
            readonly example: "I am one of the best software engineers of all time";
        };
        readonly socialMedia: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/SocialMediaInput";
            };
        };
        readonly skills: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/SkillInput";
            };
        };
        readonly address: {
            readonly $ref: "#/components/schemas/AddressInput";
        };
    };
    readonly required: readonly ["imageUrl", "title", "birthdate", "overview", "socialMedia", "skills", "address"];
};
export declare const $AddressInfo: {
    readonly type: "object";
    readonly properties: {
        readonly street: {
            readonly type: "string";
            readonly example: "Elm street 13";
        };
        readonly city: {
            readonly type: "string";
            readonly example: "Paradise City";
        };
        readonly state: {
            readonly type: "string";
            readonly example: "California";
        };
        readonly country: {
            readonly type: "string";
            readonly example: "Puerto Rico";
        };
        readonly postalCode: {
            readonly type: "string";
            readonly example: "12335";
        };
    };
};
export declare const $SkillInfo: {
    readonly type: "object";
    readonly properties: {
        readonly name: {
            readonly type: "string";
            readonly example: "woodpecking";
        };
        readonly proficiency: {
            readonly type: "number";
            readonly example: 5;
        };
    };
};
export declare const $PaymentTypeEnum: {
    readonly type: "string";
    readonly default: "HOURLY";
    readonly enum: readonly ["HOURLY", "FIXED_PRICE", "PRIZE_POOL"];
};
export declare const $CraftspersonPartyList: {
    readonly type: "object";
    readonly properties: {
        readonly records: {
            readonly type: "array";
            readonly items: {
                readonly allOf: readonly [{
                    readonly $ref: "#/components/schemas/BaseParty";
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly address: {
                            readonly $ref: "#/components/schemas/AddressInfo";
                        };
                        readonly skills: {
                            readonly type: "array";
                            readonly items: {
                                readonly $ref: "#/components/schemas/SkillInfo";
                            };
                        };
                        readonly resumeLink: {
                            readonly type: "string";
                            readonly example: "https://my-resume.crowdcraft.com";
                        };
                        readonly introduction: {
                            readonly type: "string";
                            readonly example: "Hi, I am Bob Martin, also known as 'Uncle Bob'";
                        };
                        readonly videoLink: {
                            readonly type: "string";
                            readonly example: "https://video-example.crowdcraft.com";
                        };
                        readonly payment: {
                            readonly type: "number";
                            readonly example: 100;
                        };
                        readonly paymentType: {
                            readonly $ref: "#/components/schemas/PaymentTypeEnum";
                        };
                    };
                }];
            };
        };
    };
};
export declare const $CreateCraftsperson: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "string";
            readonly format: "uuid";
        };
        readonly name: {
            readonly type: "string";
            readonly example: "John";
        };
        readonly surname: {
            readonly type: "string";
            readonly example: "Carmack";
        };
        readonly email: {
            readonly type: "string";
            readonly example: "jcarmack@republic.global";
        };
        readonly country: {
            readonly type: "string";
            readonly example: "Cuba";
        };
    };
    readonly required: readonly ["id", "name", "surname", "email", "country"];
};
export declare const $CraftspersonPublicProfile: {
    readonly type: "object";
    readonly properties: {
        readonly ccId: {
            readonly type: "string";
            readonly format: "uuid";
        };
        readonly name: {
            readonly type: "string";
            readonly example: "Martin";
        };
        readonly surname: {
            readonly type: "string";
            readonly example: "Fowler";
        };
        readonly imageLink: {
            readonly type: "string";
            readonly example: "https://martin.profile.jpg";
        };
        readonly address: {
            readonly $ref: "#/components/schemas/AddressInfo";
        };
        readonly socialMedia: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/SocialMedia";
            };
        };
        readonly joinDate: {
            readonly type: "string";
            readonly format: "date-time";
        };
        readonly qualification: {
            readonly $ref: "#/components/schemas/QualificationEnum";
        };
        readonly birthdate: {
            readonly type: "string";
            readonly format: "date-time";
        };
        readonly education: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/EducationInfo";
            };
        };
        readonly workExperience: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/WorkExperienceInput";
            };
        };
        readonly skills: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/SkillInfo";
            };
        };
        readonly portfolio: {
            readonly type: "array";
            readonly items: {
                readonly $ref: "#/components/schemas/PortfolioInput";
            };
        };
        readonly resumeLink: {
            readonly type: "string";
            readonly example: "https://crowdcraft.io/my-resume.pdf";
        };
        readonly introduction: {
            readonly type: "string";
            readonly example: "My name is Michael Carmack and I am not who you think I am";
        };
        readonly videoLink: {
            readonly type: "string";
            readonly example: "https://video.link.example/sda.mp4";
        };
        readonly payment: {
            readonly type: "number";
            readonly example: 1000;
        };
        readonly paymentType: {
            readonly $ref: "#/components/schemas/PaymentTypeEnum";
        };
    };
};
export declare const $EducationInfo: {
    readonly type: "object";
    readonly properties: {
        readonly title: {
            readonly type: "string";
            readonly example: "Applied Mathematics";
        };
        readonly academy: {
            readonly type: "string";
            readonly example: "Tokyo University";
        };
        readonly dateStart: {
            readonly type: "string";
            readonly format: "date-time";
        };
        readonly dateEnd: {
            readonly type: "string";
            readonly format: "date-time";
        };
        readonly level: {
            readonly $ref: "#/components/schemas/QualificationEnum";
        };
    };
};
export declare const $QualificationEnum: {
    readonly type: "string";
    readonly default: "BACHELOR";
    readonly enum: readonly ["ASSOCIATE", "BACHELOR", "MASTER", "DOCTOR"];
};
//# sourceMappingURL=schemas.gen.d.ts.map