export type ClientsList = Array<BaseParty>;
export type OrganizationInfo = {
    size?: number;
    founded?: string;
    phone?: string;
    category?: string;
};
export type OrganizationInput = {
    name?: string;
    description?: string;
    email?: string;
    address?: AddressInput;
    imageLink?: string;
    socialLinks?: Array<SocialMediaInput>;
    size?: number;
    founded?: string;
    phone?: string;
    category?: string;
};
export type Organization = {
    id?: string;
    size?: number;
    founded?: string;
    phone?: string;
    category?: string;
};
export type PartyFullData = BaseParty & {
    craftsPerson?: CraftsPersonFullData;
};
export type PartyInput = {
    name?: string;
    role?: string;
    description?: string;
    email?: string;
    imageLink?: string;
    address?: AddressInput;
    socialLinks?: Array<SocialMediaInput>;
};
export type AddressInput = {
    street?: string;
    state?: string;
    postalCode?: string;
    city?: string;
    country?: string;
};
export type SocialMediaInput = {
    title: string;
    link: string;
};
export type Address = {
    id?: number;
    street?: string;
    city?: string;
    state?: string;
    country?: string;
    postalCode?: string;
    number?: number;
};
export type SocialMedia = {
    id?: number;
    title?: string;
    link?: string;
};
export type CraftsPerson = {
    craftspersonId?: string;
    resumeLink?: string;
    introduction?: string;
    videoLink?: string;
    payment?: number;
    paymentType?: 'HOURLY' | 'FIXED' | 'PRIZE';
};
export type paymentType = 'HOURLY' | 'FIXED' | 'PRIZE';
export type CraftspersonProfile = {
    ccId?: string;
    name?: string;
    surname?: string;
    title?: string;
    imageLink?: string;
    address?: Address;
    skills?: Array<Skill>;
    lastSeen?: string;
} & CraftsPerson;
export type CraftsPersonFullData = CraftsPerson & {
    skills?: Array<Skill>;
    education?: Array<Education>;
    workExperience?: Array<WorkExperience>;
    portfolio?: Array<Portfolio>;
};
export type CraftsPersonPartyInput = PartyInput & {
    age?: number;
    resumeLink?: string;
    videoLink?: string;
};
export type CraftspersonResumeInfo = {
    ccId?: string;
    name?: string;
    surname?: string;
    birthdate?: string;
    imageUrl?: string;
    socialMedia?: Array<SocialMediaInput>;
    address?: AddressInput;
    qualification?: QualificationEnum;
    skills?: Array<SkillInput>;
} & CraftspersonUpdateInput;
export type CraftspersonUpdateInput = {
    resumeLink: string;
    payment: number;
    paymentType: PaymentTypeEnum;
    introduction: string;
    videoLink: string;
    education: Array<EducationInput>;
    workExperience: Array<WorkExperienceInput>;
    portfolio: Array<PortfolioInput>;
};
export type SkillInput = {
    name?: string;
    proficiency?: number;
};
export type WorkExperienceInput = {
    title?: string;
    company?: string;
    startDate?: string;
    endDate?: string;
    description?: string;
};
export type PortfolioInput = {
    title?: string;
    imageLink?: string;
    description?: string;
    url?: string;
};
export type EducationInput = {
    title?: string;
    academy?: string;
    startDate?: string;
    endDate?: string;
    description?: string;
    educationLevel?: QualificationEnum;
};
export type Client = {
    id?: string;
    organization_id?: string;
};
export type ClientPartyInput = PartyInput;
export type ClientInput = {
    organizations?: Array<string>;
};
export type Education = {
    id?: number;
    title?: string;
    accademy?: string;
    dateStart?: string;
    dateEnd?: string;
    level?: 'ASSOCIATE' | 'BACHELOR' | 'MASTER' | 'DOCTOR';
};
export type level = 'ASSOCIATE' | 'BACHELOR' | 'MASTER' | 'DOCTOR';
export type PortfolioItem = {
    title: string;
    description?: string;
    imageLink: string;
    url: string;
};
export type Portfolio = {
    id?: number;
    title?: string;
    imageLink?: string;
    description?: string;
};
export type WorkExperience = {
    id?: number;
    title?: string;
    company?: string;
    dateStart?: string;
    dateEnd?: string;
};
export type Skill = {
    id?: number;
    name?: string;
    proficiency?: number;
};
export type BaseParty = {
    ccId?: string;
    name?: string;
    surname?: string;
    birthdate?: string;
    description?: string;
    title?: string;
    email?: string;
    countryCode?: string;
    phone?: string;
    partyType?: string;
    imageLink?: string;
    lastSeen?: string;
};
export type CraftspersonWithSkills = {
    resumeLink?: string;
    videoLink?: string;
    payment?: number;
    paymentType?: string;
    skills?: Array<SkillInfo>;
};
export type PartyCraftsListItem = BaseParty & CraftspersonWithSkills & {
    address?: AddressInfo;
    portfolio?: Array<PortfolioItem>;
};
export type CreateParty = {
    id: string;
    name: string;
    surname: string;
    email: string;
    country: string;
};
export type AccountData = {
    name: string;
    surname: string;
    email: string;
    phone: string;
};
export type CraftspersonProfileView = {
    ccId?: string;
    name?: string;
    surname?: string;
    imageLink?: string;
    address?: Address;
    socialMedia?: Array<SocialMedia>;
    joinDate?: string;
    qualification?: string;
    birthdate?: string;
    education?: Array<Education>;
    workExperience?: Array<WorkExperienceInput>;
    skills?: Array<Skill>;
    portfolio?: Array<Portfolio>;
} & CraftsPerson;
export type CraftspersonProfileInfo = {
    craftspersonId?: string;
    imageUrl?: string;
    name?: string;
    surname?: string;
    title?: string;
    birthdate?: string;
    address?: AddressInfo;
    skills?: Array<SkillInput>;
    overview?: string;
    socialMedia?: Array<SocialMediaInput>;
};
export type CraftspersonProfileUpdate = {
    imageUrl: string;
    title: string;
    birthdate: string;
    overview: string;
    socialMedia: Array<SocialMediaInput>;
    skills: Array<SkillInput>;
    address: AddressInput;
};
export type AddressInfo = {
    street?: string;
    city?: string;
    state?: string;
    country?: string;
    postalCode?: string;
};
export type SkillInfo = {
    name?: string;
    proficiency?: number;
};
export type PaymentTypeEnum = 'HOURLY' | 'FIXED_PRICE' | 'PRIZE_POOL';
export type CraftspersonPartyList = {
    records?: Array<BaseParty & {
        address?: AddressInfo;
        skills?: Array<SkillInfo>;
        resumeLink?: string;
        introduction?: string;
        videoLink?: string;
        payment?: number;
        paymentType?: PaymentTypeEnum;
    }>;
};
export type CreateCraftsperson = {
    id: string;
    name: string;
    surname: string;
    email: string;
    country: string;
};
export type CraftspersonPublicProfile = {
    ccId?: string;
    name?: string;
    surname?: string;
    imageLink?: string;
    address?: AddressInfo;
    socialMedia?: Array<SocialMedia>;
    joinDate?: string;
    qualification?: QualificationEnum;
    birthdate?: string;
    education?: Array<EducationInfo>;
    workExperience?: Array<WorkExperienceInput>;
    skills?: Array<SkillInfo>;
    portfolio?: Array<PortfolioInput>;
    resumeLink?: string;
    introduction?: string;
    videoLink?: string;
    payment?: number;
    paymentType?: PaymentTypeEnum;
};
export type EducationInfo = {
    title?: string;
    academy?: string;
    dateStart?: string;
    dateEnd?: string;
    level?: QualificationEnum;
};
export type QualificationEnum = 'ASSOCIATE' | 'BACHELOR' | 'MASTER' | 'DOCTOR';
export type GetPartyResponse = Array<BaseParty>;
export type GetPartyByIdData = {
    /**
     * uuid of the party to get
     */
    id: string;
};
export type GetPartyByIdResponse = BaseParty;
export type PostPartyCraftspersonListData = {
    requestBody: {
        /**
         * Array of craftsperson IDs
         */
        ccIds: Array<string>;
    };
};
export type PostPartyCraftspersonListResponse = {
    records?: Array<PartyCraftsListItem>;
};
export type PostPartyPartyListData = {
    requestBody?: {
        ccIds: Array<string>;
    };
};
export type PostPartyPartyListResponse = Array<BaseParty>;
export type PostPartyHeartbeatResponse = void;
export type GetOrganizationResponse = Array<Organization>;
export type PostOrganizationData = {
    requestBody?: OrganizationInput;
};
export type PostOrganizationResponse = unknown;
export type GetOrganizationByIdData = {
    /**
     * UUID of the Organization to get
     */
    id: string;
};
export type GetOrganizationByIdResponse = Organization & {
    crowdPeople?: Array<CraftsPerson>;
    clients?: Array<Client>;
};
export type PutOrganizationByIdData = {
    /**
     * UUID of the organization to update
     */
    id: string;
    requestBody?: OrganizationInfo;
};
export type PutOrganizationByIdResponse = unknown;
export type PostOrganizationByIdAddData = {
    /**
     * Organization's UUID
     */
    id: string;
    requestBody?: {
        memberId?: string;
    };
};
export type PostOrganizationByIdAddResponse = unknown;
export type PostOrganizationByIdRemoveData = {
    /**
     * Organization's UUID
     */
    id: string;
    requestBody?: {
        memberId?: string;
    };
};
export type PostOrganizationByIdRemoveResponse = unknown;
export type GetCraftspersonRetrieveResponse = CraftspersonPartyList;
export type PostCraftspersonCreateData = {
    requestBody?: CreateCraftsperson;
};
export type PostCraftspersonCreateResponse = unknown;
export type GetCraftspersonByIdData = {
    /**
     * Crafts Person's UUID
     */
    id: string;
};
export type GetCraftspersonByIdResponse = CraftspersonPublicProfile;
export type GetCraftspersonResumeResponse = CraftspersonResumeInfo;
export type PutCraftspersonResumeData = {
    requestBody?: CraftspersonUpdateInput;
};
export type PutCraftspersonResumeResponse = unknown;
export type GetCraftspersonProfileResponse = CraftspersonProfileInfo;
export type PutCraftspersonProfileData = {
    requestBody?: CraftspersonProfileUpdate;
};
export type PutCraftspersonProfileResponse = unknown;
export type GetCraftspersonByIdPortfolioData = {
    /**
     * Client's UUID
     */
    id: string;
};
export type GetCraftspersonByIdPortfolioResponse = Array<PortfolioItem>;
export type GetPartyAccountResponse = AccountData;
export type PutPartyPhoneData = {
    requestBody?: {
        phone: string;
    };
};
export type PutPartyPhoneResponse = string;
export type GetClientResponse = Array<ClientsList>;
export type PostClientData = {
    requestBody?: CreateParty;
};
export type PostClientResponse = string;
export type $OpenApiTs = {
    '/party': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<BaseParty>;
            };
        };
    };
    '/party/{id}': {
        get: {
            req: GetPartyByIdData;
            res: {
                /**
                 * OK
                 */
                200: BaseParty;
            };
        };
    };
    '/party/craftsperson-list': {
        post: {
            req: PostPartyCraftspersonListData;
            res: {
                /**
                 * List of craftspeople
                 */
                200: {
                    records?: Array<PartyCraftsListItem>;
                };
                /**
                 * Bad request
                 */
                400: unknown;
            };
        };
    };
    '/party/party-list': {
        post: {
            req: PostPartyPartyListData;
            res: {
                /**
                 * OK
                 */
                200: Array<BaseParty>;
            };
        };
    };
    '/party/heartbeat': {
        post: {
            res: {
                /**
                 * Heartbeat processed
                 */
                204: void;
            };
        };
    };
    '/organization': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<Organization>;
            };
        };
        post: {
            req: PostOrganizationData;
            res: {
                /**
                 * Created
                 */
                201: unknown;
            };
        };
    };
    '/organization/{id}': {
        get: {
            req: GetOrganizationByIdData;
            res: {
                /**
                 * OK
                 */
                200: Organization & {
                    crowdPeople?: Array<CraftsPerson>;
                    clients?: Array<Client>;
                };
            };
        };
        put: {
            req: PutOrganizationByIdData;
            res: {
                /**
                 * Updated
                 */
                201: unknown;
            };
        };
    };
    '/organization/{id}/add': {
        post: {
            req: PostOrganizationByIdAddData;
            res: {
                /**
                 * Updated
                 */
                201: unknown;
                /**
                 * Not Found
                 */
                404: unknown;
            };
        };
    };
    '/organization/{id}/remove': {
        post: {
            req: PostOrganizationByIdRemoveData;
            res: {
                /**
                 * Updated
                 */
                201: unknown;
                /**
                 * Not Found
                 */
                404: unknown;
            };
        };
    };
    '/craftsperson/retrieve': {
        get: {
            res: {
                /**
                 * Success
                 */
                200: CraftspersonPartyList;
                /**
                 * Bad request
                 */
                400: unknown;
            };
        };
    };
    '/craftsperson/create': {
        post: {
            req: PostCraftspersonCreateData;
            res: {
                /**
                 * Created
                 */
                201: unknown;
                /**
                 * Bad request
                 */
                400: unknown;
            };
        };
    };
    '/craftsperson/{id}': {
        get: {
            req: GetCraftspersonByIdData;
            res: {
                /**
                 * OK
                 */
                200: CraftspersonPublicProfile;
                /**
                 * Not Found
                 */
                404: unknown;
            };
        };
    };
    '/craftsperson/resume': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: CraftspersonResumeInfo;
                /**
                 * Unauthorized
                 */
                401: unknown;
                /**
                 * User not found
                 */
                404: unknown;
            };
        };
        put: {
            req: PutCraftspersonResumeData;
            res: {
                /**
                 * Updated
                 */
                201: unknown;
                /**
                 * Unauthorized
                 */
                401: unknown;
            };
        };
    };
    '/craftsperson/profile': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: CraftspersonProfileInfo;
                /**
                 * Unauthorized
                 */
                401: unknown;
                /**
                 * Not found
                 */
                404: unknown;
            };
        };
        put: {
            req: PutCraftspersonProfileData;
            res: {
                /**
                 * OK
                 */
                201: unknown;
                /**
                 * Unauthorized
                 */
                401: unknown;
                /**
                 * Not found
                 */
                404: unknown;
            };
        };
    };
    '/craftsperson/{id}/portfolio': {
        get: {
            req: GetCraftspersonByIdPortfolioData;
            res: {
                /**
                 * Success
                 */
                200: Array<PortfolioItem>;
            };
        };
    };
    '/party/account': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: AccountData;
            };
        };
    };
    '/party/phone': {
        put: {
            req: PutPartyPhoneData;
            res: {
                /**
                 * Updated
                 */
                201: string;
            };
        };
    };
    '/client': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<ClientsList>;
            };
        };
        post: {
            req: PostClientData;
            res: {
                /**
                 * Updated
                 */
                201: string;
            };
        };
    };
};
//# sourceMappingURL=types.gen.d.ts.map