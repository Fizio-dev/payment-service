{"version":3,"file":"services.gen.js","sourceRoot":"","sources":["../../src/services.gen.ts"],"names":[],"mappings":"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","sourcesContent":["// This file is auto-generated by @hey-api/openapi-ts\nimport type { CancelablePromise } from './core/CancelablePromise.js';\nimport { OpenAPI } from './core/OpenAPI.js';\nimport { request as __request } from './core/request.js';\nimport type {\n    AllResponse,\n    ApprovePaymentData,\n    ApprovePaymentResponse,\n    CancelPaymentData,\n    CancelPaymentResponse,\n    CreatePaymentAccountData,\n    CreatePaymentAccountResponse2,\n    CreatePaymentData,\n    CreatePaymentResponse,\n    GetPaymentAccountData,\n    GetPaymentAccountResponse,\n    GetPaymentStatsResponse,\n    GetReferencePaymentsData,\n    GetReferencePaymentsResponse,\n    GetUserPaymentStatsData,\n    GetUserPaymentStatsResponse,\n    GetUserPaymentsData,\n    GetUserPaymentsResponse,\n    UpdatePaymentData,\n    UpdatePaymentResponse,\n} from './types.gen.js';\n\n/**\n * List payments by reference ids\n * references are set by external services. for example 'contract-{id}'\n * @param data The data for the request.\n * @param data.referenceIds\n * @returns PaymentDetails OK\n * @throws ApiError\n */\nexport const getReferencePayments = (\n    data: GetReferencePaymentsData\n): CancelablePromise<GetReferencePaymentsResponse> => {\n    return __request(OpenAPI, {\n        method: 'GET',\n        url: '/payments',\n        query: {\n            referenceIds: data.referenceIds,\n        },\n    });\n};\n\n/**\n * Create new payment\n * @param data The data for the request.\n * @param data.requestBody\n * @returns Payment OK\n * @throws ApiError\n */\nexport const createPayment = (\n    data: CreatePaymentData\n): CancelablePromise<CreatePaymentResponse> => {\n    return __request(OpenAPI, {\n        method: 'POST',\n        url: '/payments',\n        body: data.requestBody,\n        mediaType: 'application/json',\n    });\n};\n\n/**\n * Update existing payment\n * @param data The data for the request.\n * @param data.requestBody\n * @returns Payment OK\n * @throws ApiError\n */\nexport const updatePayment = (\n    data: UpdatePaymentData\n): CancelablePromise<UpdatePaymentResponse> => {\n    return __request(OpenAPI, {\n        method: 'PATCH',\n        url: '/payments',\n        body: data.requestBody,\n        mediaType: 'application/json',\n    });\n};\n\n/**\n * Cancel a payment\n * @param data The data for the request.\n * @param data.id\n * @returns Payment OK\n * @throws ApiError\n */\nexport const cancelPayment = (\n    data: CancelPaymentData\n): CancelablePromise<CancelPaymentResponse> => {\n    return __request(OpenAPI, {\n        method: 'POST',\n        url: '/payments/{id}/cancel',\n        path: {\n            id: data.id,\n        },\n    });\n};\n\n/**\n * Approve a payment\n * @param data The data for the request.\n * @param data.id\n * @returns Payment OK\n * @throws ApiError\n */\nexport const approvePayment = (\n    data: ApprovePaymentData\n): CancelablePromise<ApprovePaymentResponse> => {\n    return __request(OpenAPI, {\n        method: 'POST',\n        url: '/payments/{id}/approve',\n        path: {\n            id: data.id,\n        },\n    });\n};\n\n/**\n * Get users connected payment account\n * Success -> account connected. Failure -> account not connected\n * @param data The data for the request.\n * @param data.userId\n * @returns PaymentAccount OK\n * @throws ApiError\n */\nexport const getPaymentAccount = (\n    data: GetPaymentAccountData\n): CancelablePromise<GetPaymentAccountResponse> => {\n    return __request(OpenAPI, {\n        method: 'GET',\n        url: '/paymentAccount/{userId}',\n        path: {\n            userId: data.userId,\n        },\n        errors: {\n            404: 'Payment account not connected',\n        },\n    });\n};\n\n/**\n * Get the url for payment account onboarding. Redirect the user to this url immediately, don't share it anywhere else\n * Success -> do the redirect. Failure -> something is wrong, contact support\n * @param data The data for the request.\n * @param data.userId\n * @returns CreatePaymentAccountResponse OK\n * @throws ApiError\n */\nexport const createPaymentAccount = (\n    data: CreatePaymentAccountData\n): CancelablePromise<CreatePaymentAccountResponse2> => {\n    return __request(OpenAPI, {\n        method: 'POST',\n        url: '/paymentAccount/{userId}',\n        path: {\n            userId: data.userId,\n        },\n        errors: {\n            500: 'Internal error, contact support',\n        },\n    });\n};\n\n/**\n * List user payments\n * @param data The data for the request.\n * @param data.userId\n * @param data.page\n * @param data.perPage\n * @returns PaymentDetails OK\n * @throws ApiError\n */\nexport const getUserPayments = (\n    data: GetUserPaymentsData\n): CancelablePromise<GetUserPaymentsResponse> => {\n    return __request(OpenAPI, {\n        method: 'GET',\n        url: '/payments/{userId}',\n        path: {\n            userId: data.userId,\n        },\n        query: {\n            page: data.page,\n            perPage: data.perPage,\n        },\n    });\n};\n\n/**\n * Fetch user payment stats\n * @param data The data for the request.\n * @param data.userId\n * @returns PaymentStats OK\n * @throws ApiError\n */\nexport const getUserPaymentStats = (\n    data: GetUserPaymentStatsData\n): CancelablePromise<GetUserPaymentStatsResponse> => {\n    return __request(OpenAPI, {\n        method: 'GET',\n        url: '/payments/{userId}/stats',\n        path: {\n            userId: data.userId,\n        },\n    });\n};\n\n/**\n * Fetch payment stats\n * @returns ClientPaymentStats OK\n * @throws ApiError\n */\nexport const getPaymentStats =\n    (): CancelablePromise<GetPaymentStatsResponse> => {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/payments/stats',\n        });\n    };\n\n/**\n * @returns string OK\n * @throws ApiError\n */\nexport const all = (): CancelablePromise<AllResponse> => {\n    return __request(OpenAPI, {\n        method: 'GET',\n        url: '/health',\n    });\n};\n"]}