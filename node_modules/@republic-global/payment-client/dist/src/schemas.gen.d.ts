export declare const $CreatePaymentRequest: {
    readonly type: "object";
    readonly properties: {
        readonly userId: {
            readonly type: "string";
        };
        readonly amount: {
            readonly type: "integer";
            readonly format: "int32";
        };
        readonly description: {
            readonly type: "string";
        };
        readonly externalId: {
            readonly type: "string";
        };
    };
};
export declare const $Payment: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "integer";
            readonly format: "int64";
        };
        readonly userId: {
            readonly type: "string";
        };
        readonly amount: {
            readonly type: "integer";
            readonly format: "int32";
        };
        readonly description: {
            readonly type: "string";
        };
        readonly status: {
            readonly type: "string";
        };
        readonly originalAmount: {
            readonly type: "integer";
            readonly format: "int32";
        };
        readonly createdAt: {
            readonly type: "string";
            readonly format: "date-time";
        };
        readonly releasedAt: {
            readonly type: "string";
            readonly format: "date-time";
        };
        readonly approvedAt: {
            readonly type: "string";
            readonly format: "date-time";
        };
        readonly updatedAt: {
            readonly type: "string";
            readonly format: "date-time";
        };
        readonly paidAt: {
            readonly type: "string";
            readonly format: "date-time";
        };
        readonly cancelledAt: {
            readonly type: "string";
            readonly format: "date-time";
        };
        readonly createdBy: {
            readonly type: "string";
        };
        readonly updatedBy: {
            readonly type: "string";
        };
        readonly externalId: {
            readonly type: "string";
        };
        readonly payout: {
            readonly $ref: "#/components/schemas/Payout";
        };
    };
};
export declare const $PaymentAccount: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "integer";
            readonly format: "int64";
        };
        readonly userId: {
            readonly type: "string";
        };
        readonly accountId: {
            readonly type: "string";
        };
        readonly accountStatus: {
            readonly type: "string";
        };
        readonly createdAt: {
            readonly type: "string";
            readonly format: "date-time";
        };
        readonly connectedAt: {
            readonly type: "string";
            readonly format: "date-time";
        };
    };
};
export declare const $Payout: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "integer";
            readonly format: "int64";
        };
        readonly paymentAccount: {
            readonly $ref: "#/components/schemas/PaymentAccount";
        };
        readonly createdAt: {
            readonly type: "string";
            readonly format: "date-time";
        };
        readonly amount: {
            readonly type: "integer";
            readonly format: "int32";
        };
        readonly status: {
            readonly type: "string";
        };
        readonly transferId: {
            readonly type: "string";
        };
    };
};
export declare const $CreatePaymentAccountResponse: {
    readonly type: "object";
    readonly properties: {
        readonly url: {
            readonly type: "string";
        };
    };
};
export declare const $UpdatePaymentRequest: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "integer";
            readonly format: "int64";
        };
        readonly amount: {
            readonly type: "integer";
            readonly format: "int32";
        };
        readonly description: {
            readonly type: "string";
        };
        readonly approve: {
            readonly type: "boolean";
        };
    };
};
export declare const $PaymentDetails: {
    readonly type: "object";
    readonly properties: {
        readonly id: {
            readonly type: "integer";
            readonly format: "int64";
        };
        readonly userId: {
            readonly type: "string";
        };
        readonly amount: {
            readonly type: "integer";
            readonly format: "int32";
        };
        readonly description: {
            readonly type: "string";
        };
        readonly status: {
            readonly type: "string";
        };
        readonly externalId: {
            readonly type: "string";
        };
        readonly originalAmount: {
            readonly type: "integer";
            readonly format: "int32";
        };
        readonly approvedAt: {
            readonly type: "string";
            readonly format: "date-time";
        };
        readonly paidAt: {
            readonly type: "string";
            readonly format: "date-time";
        };
    };
};
export declare const $PaymentStats: {
    readonly type: "object";
    readonly properties: {
        readonly draftPaymentsAmount: {
            readonly type: "integer";
            readonly format: "int32";
        };
        readonly pendingPaymentsAmount: {
            readonly type: "integer";
            readonly format: "int32";
        };
        readonly totalEarnings: {
            readonly type: "integer";
            readonly format: "int32";
        };
    };
};
export declare const $ClientPaymentStats: {
    readonly type: "object";
    readonly properties: {
        readonly totalExpenses: {
            readonly type: "integer";
            readonly format: "int32";
        };
    };
};
//# sourceMappingURL=schemas.gen.d.ts.map