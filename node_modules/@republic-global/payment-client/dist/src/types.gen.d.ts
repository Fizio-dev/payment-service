export type CreatePaymentRequest = {
    userId?: string;
    amount?: number;
    description?: string;
    externalId?: string;
};
export type Payment = {
    id?: number;
    userId?: string;
    amount?: number;
    description?: string;
    status?: string;
    originalAmount?: number;
    createdAt?: string;
    releasedAt?: string;
    approvedAt?: string;
    updatedAt?: string;
    paidAt?: string;
    cancelledAt?: string;
    createdBy?: string;
    updatedBy?: string;
    externalId?: string;
    payout?: Payout;
};
export type PaymentAccount = {
    id?: number;
    userId?: string;
    accountId?: string;
    accountStatus?: string;
    createdAt?: string;
    connectedAt?: string;
};
export type Payout = {
    id?: number;
    paymentAccount?: PaymentAccount;
    createdAt?: string;
    amount?: number;
    status?: string;
    transferId?: string;
};
export type CreatePaymentAccountResponse = {
    url?: string;
};
export type UpdatePaymentRequest = {
    id?: number;
    amount?: number;
    description?: string;
    approve?: boolean;
};
export type PaymentDetails = {
    id?: number;
    userId?: string;
    amount?: number;
    description?: string;
    status?: string;
    externalId?: string;
    originalAmount?: number;
    approvedAt?: string;
    paidAt?: string;
};
export type PaymentStats = {
    draftPaymentsAmount?: number;
    pendingPaymentsAmount?: number;
    totalEarnings?: number;
};
export type ClientPaymentStats = {
    totalExpenses?: number;
};
export type GetReferencePaymentsData = {
    referenceIds: Array<string>;
};
export type GetReferencePaymentsResponse = Array<PaymentDetails>;
export type CreatePaymentData = {
    requestBody: CreatePaymentRequest;
};
export type CreatePaymentResponse = Payment;
export type UpdatePaymentData = {
    requestBody: UpdatePaymentRequest;
};
export type UpdatePaymentResponse = Payment;
export type CancelPaymentData = {
    id: number;
};
export type CancelPaymentResponse = Payment;
export type ApprovePaymentData = {
    id: number;
};
export type ApprovePaymentResponse = Payment;
export type GetPaymentAccountData = {
    userId: string;
};
export type GetPaymentAccountResponse = PaymentAccount;
export type CreatePaymentAccountData = {
    userId: string;
};
export type CreatePaymentAccountResponse2 = CreatePaymentAccountResponse;
export type GetUserPaymentsData = {
    page: number;
    perPage: number;
    userId: string;
};
export type GetUserPaymentsResponse = Array<PaymentDetails>;
export type GetUserPaymentStatsData = {
    userId: string;
};
export type GetUserPaymentStatsResponse = PaymentStats;
export type GetPaymentStatsResponse = ClientPaymentStats;
export type AllResponse = Array<string>;
export type $OpenApiTs = {
    '/payments': {
        get: {
            req: GetReferencePaymentsData;
            res: {
                /**
                 * OK
                 */
                200: Array<PaymentDetails>;
            };
        };
        post: {
            req: CreatePaymentData;
            res: {
                /**
                 * OK
                 */
                200: Payment;
            };
        };
        patch: {
            req: UpdatePaymentData;
            res: {
                /**
                 * OK
                 */
                200: Payment;
            };
        };
    };
    '/payments/{id}/cancel': {
        post: {
            req: CancelPaymentData;
            res: {
                /**
                 * OK
                 */
                200: Payment;
            };
        };
    };
    '/payments/{id}/approve': {
        post: {
            req: ApprovePaymentData;
            res: {
                /**
                 * OK
                 */
                200: Payment;
            };
        };
    };
    '/paymentAccount/{userId}': {
        get: {
            req: GetPaymentAccountData;
            res: {
                /**
                 * OK
                 */
                200: PaymentAccount;
                /**
                 * Payment account not connected
                 */
                404: unknown;
            };
        };
        post: {
            req: CreatePaymentAccountData;
            res: {
                /**
                 * OK
                 */
                200: CreatePaymentAccountResponse;
                /**
                 * Internal error, contact support
                 */
                500: unknown;
            };
        };
    };
    '/payments/{userId}': {
        get: {
            req: GetUserPaymentsData;
            res: {
                /**
                 * OK
                 */
                200: Array<PaymentDetails>;
            };
        };
    };
    '/payments/{userId}/stats': {
        get: {
            req: GetUserPaymentStatsData;
            res: {
                /**
                 * OK
                 */
                200: PaymentStats;
            };
        };
    };
    '/payments/stats': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: ClientPaymentStats;
            };
        };
    };
    '/health': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<string>;
            };
        };
    };
};
//# sourceMappingURL=types.gen.d.ts.map