{"version":3,"file":"jwt-auth.js","sourceRoot":"","sources":["../../../src/middleware/jwt-auth.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,UAAU,CAAC;AAEpC,OAAO,EAAE,qBAAqB,EAAE,MAAM,sBAAsB,CAAC;AAE7D,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAChC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;AAEpC,MAAM,CAAC,MAAM,OAAO,GAAG,CACnB,GAAY,EACZ,GAAa,EACb,IAAkB,EACd,EAAE;IACN,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AACrE,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,CACzB,GAAuC,EACvC,GAAa,EACb,IAAkB,EACd,EAAE;IACN,mDAAmD;IACnD,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,SAAS,CAAC;IACpD,IAAI,WAAW,EAAE,CAAC;QACd,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;SAAM,CAAC;QACJ,IAAI,EAAE,CAAC;IACX,CAAC;AACL,CAAC,CAAC","sourcesContent":["import type { NextFunction, Request, Response } from 'express';\nimport { Passport } from 'passport';\n\nimport { crowdCraftJwtStrategy } from '../strategy/index.js';\n\nconst passport = new Passport();\npassport.use(crowdCraftJwtStrategy);\n\nexport const jwtAuth = (\n    req: Request,\n    res: Response,\n    next: NextFunction\n): void => {\n    passport.authenticate('jwt', { session: false })(req, res, next);\n};\n\nexport const socketJwtAuth = (\n    req: { _query: Record<string, string> },\n    res: Response,\n    next: NextFunction\n): void => {\n    // only check during initial handshake http request\n    const isHandshake = req._query['sid'] === undefined;\n    if (isHandshake) {\n        passport.authenticate('jwt', { session: false })(req, res, next);\n    } else {\n        next();\n    }\n};\n"]}