import jwksRsa from 'jwks-rsa';
import process from 'node:process';
import { ExtractJwt, Strategy as JwtStrategy, } from 'passport-jwt';
const opts = {
    jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),
    issuer: process.env['ISSUER'],
    secretOrKeyProvider: jwksRsa.passportJwtSecret({
        cache: true,
        rateLimit: true,
        jwksRequestsPerMinute: 5,
        jwksUri: process.env['JWKS_URI'],
    }),
    passReqToCallback: true,
};
export const crowdCraftJwtStrategy = new JwtStrategy(opts, function (req, jwt_payload, done) {
    const user = {
        id: jwt_payload.sub,
        username: jwt_payload.extension_Username,
        userType: jwt_payload.extension_UserType,
        firstName: jwt_payload.given_name,
        lastName: jwt_payload.family_name,
        country: jwt_payload.country,
        registrationStatus: jwt_payload.extension_RegistrationStatus,
        isServiceAccount: false,
    };
    if (!('extension_Username' in jwt_payload)) {
        user.isServiceAccount = true;
        user.serviceAccountId = jwt_payload.azp;
    }
    const authInfo = {
        token: ExtractJwt.fromAuthHeaderAsBearerToken()(req),
    };
    return done(null, user, authInfo);
});
//# sourceMappingURL=crowdcraft-jwt-strategy.js.map