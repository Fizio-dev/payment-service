import type { CancelablePromise } from './core/CancelablePromise.js';
import type { GetWorkClientShortlistByWorkIdRetrieveData, GetWorkClientShortlistByWorkIdRetrieveResponse, GetWorkContractClientRetrieveResponse, GetWorkContractCraftspersonRetrieveResponse, GetWorkCraftspersonApplicationsRetrieveResponse, GetWorkDetailsByWorkIdData, GetWorkDetailsByWorkIdResponse, GetWorkMetadataRetrieveResponse, GetWorkMetricsSummaryResponse, GetWorkPostingByWorkIdDetailData, GetWorkPostingByWorkIdDetailResponse, GetWorkPostingRetrieveResponse, PostWorkClientApplicationApprovalData, PostWorkClientApplicationApprovalResponse, PostWorkClientRemoveShortlistData, PostWorkClientRemoveShortlistResponse, PostWorkClientShortlistData, PostWorkClientShortlistResponse, PostWorkContractClientTerminateData, PostWorkContractClientTerminateResponse, PostWorkContractCraftspersonTerminateData, PostWorkContractCraftspersonTerminateResponse, PostWorkCraftspersonApplicationWithdrawByApplicationIdData, PostWorkCraftspersonApplicationWithdrawByApplicationIdResponse, PostWorkCraftspersonApplyData, PostWorkCraftspersonApplyResponse, PostWorkCraftspersonWorkApprovalData, PostWorkCraftspersonWorkApprovalResponse, PostWorkDetailsListData, PostWorkDetailsListResponse, PostWorkPostingCloseByWorkIdData, PostWorkPostingCloseByWorkIdResponse, PostWorkRetrieveFilteredListData, PostWorkRetrieveFilteredListResponse, PutWorkUpdateData, PutWorkUpdateResponse } from './types.gen.js';
/**
 * Retrieve Metadata for work
 * Retrieve Metadata for work
 * @returns MetadataResponse Success
 * @throws ApiError
 */
export declare const getWorkMetadataRetrieve: () => CancelablePromise<GetWorkMetadataRetrieveResponse>;
/**
 * Create or update work
 * Create or update work
 * @param data The data for the request.
 * @param data.requestBody
 * @returns CreateWorkResponse Success
 * @throws ApiError
 */
export declare const putWorkUpdate: (data: PutWorkUpdateData) => CancelablePromise<PutWorkUpdateResponse>;
/**
 * Retrieve Work Details
 * Retrieve Work Details
 * @param data The data for the request.
 * @param data.workId Work ID
 * @returns WorkDetailsResponse Success
 * @throws ApiError
 */
export declare const getWorkDetailsByWorkId: (data: GetWorkDetailsByWorkIdData) => CancelablePromise<GetWorkDetailsByWorkIdResponse>;
/**
 * Retrieve multiple work details by list of work ids
 * Retrieve multiple work details by list of work ids
 * @param data The data for the request.
 * @param data.requestBody
 * @returns RetrieveMultipleWorkDetailsResponse Success
 * @throws ApiError
 */
export declare const postWorkDetailsList: (data: PostWorkDetailsListData) => CancelablePromise<PostWorkDetailsListResponse>;
/**
 * Retrieve list of work filtered and sorted
 * Retrieve list of work filtered and sorted
 * @param data The data for the request.
 * @param data.requestBody
 * @returns FilteredWorkListResponse Success
 * @throws ApiError
 */
export declare const postWorkRetrieveFilteredList: (data: PostWorkRetrieveFilteredListData) => CancelablePromise<PostWorkRetrieveFilteredListResponse>;
/**
 * Close a work posting
 * Close a work posting
 * @param data The data for the request.
 * @param data.workId Work ID
 * @returns unknown Success
 * @throws ApiError
 */
export declare const postWorkPostingCloseByWorkId: (data: PostWorkPostingCloseByWorkIdData) => CancelablePromise<PostWorkPostingCloseByWorkIdResponse>;
/**
 * Retrieve list of postings
 * Retrieve list of postings
 * @returns WorkPostingsClient Success
 * @throws ApiError
 */
export declare const getWorkPostingRetrieve: () => CancelablePromise<GetWorkPostingRetrieveResponse>;
/**
 * Get active contract details
 * Get active contract details
 * @param data The data for the request.
 * @param data.workId Work ID
 * @returns WorkPostingsDetailsResponse Success
 * @throws ApiError
 */
export declare const getWorkPostingByWorkIdDetail: (data: GetWorkPostingByWorkIdDetailData) => CancelablePromise<GetWorkPostingByWorkIdDetailResponse>;
/**
 * Apply to Work
 * Apply to Work
 * @param data The data for the request.
 * @param data.requestBody
 * @returns ApplyWorkResponse Success
 * @throws ApiError
 */
export declare const postWorkCraftspersonApply: (data: PostWorkCraftspersonApplyData) => CancelablePromise<PostWorkCraftspersonApplyResponse>;
/**
 * Withdraw Application
 * Withdraw Application
 * @param data The data for the request.
 * @param data.applicationId
 * @returns unknown Success
 * @throws ApiError
 */
export declare const postWorkCraftspersonApplicationWithdrawByApplicationId: (data: PostWorkCraftspersonApplicationWithdrawByApplicationIdData) => CancelablePromise<PostWorkCraftspersonApplicationWithdrawByApplicationIdResponse>;
/**
 * Approve or Reject work
 * Approve or Reject work
 * @param data The data for the request.
 * @param data.requestBody
 * @returns WorkApprovalResponse Success
 * @throws ApiError
 */
export declare const postWorkCraftspersonWorkApproval: (data: PostWorkCraftspersonWorkApprovalData) => CancelablePromise<PostWorkCraftspersonWorkApprovalResponse>;
/**
 * Retrieve list of applications
 * Retrieve list of applications
 * @returns CraftspersonApplicationOverview Success
 * @throws ApiError
 */
export declare const getWorkCraftspersonApplicationsRetrieve: () => CancelablePromise<GetWorkCraftspersonApplicationsRetrieveResponse>;
/**
 * Approve or Reject application
 * Approve or Reject application
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export declare const postWorkClientApplicationApproval: (data: PostWorkClientApplicationApprovalData) => CancelablePromise<PostWorkClientApplicationApprovalResponse>;
/**
 * Shortlist a craftsperson
 * Shortlist a craftsperson
 * @param data The data for the request.
 * @param data.requestBody
 * @returns ShortlistResponse Success
 * @throws ApiError
 */
export declare const postWorkClientShortlist: (data: PostWorkClientShortlistData) => CancelablePromise<PostWorkClientShortlistResponse>;
/**
 * Remove shortlist a craftsperson
 * Remove shortlist a craftsperson
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export declare const postWorkClientRemoveShortlist: (data: PostWorkClientRemoveShortlistData) => CancelablePromise<PostWorkClientRemoveShortlistResponse>;
/**
 * Get list of Shortlisted craftsperson for a work
 * Get list of Shortlisted craftsperson for a work
 * @param data The data for the request.
 * @param data.workId Work ID
 * @returns RetrieveAllShortlistResponse Success
 * @throws ApiError
 */
export declare const getWorkClientShortlistByWorkIdRetrieve: (data: GetWorkClientShortlistByWorkIdRetrieveData) => CancelablePromise<GetWorkClientShortlistByWorkIdRetrieveResponse>;
/**
 * Get active contracts
 * Get active contracts
 * @returns CraftspersonActiveContractsResponse Success
 * @throws ApiError
 */
export declare const getWorkContractCraftspersonRetrieve: () => CancelablePromise<GetWorkContractCraftspersonRetrieveResponse>;
/**
 * Get active contracts
 * Get active contracts
 * @returns ClientActiveContractsResponse Success
 * @throws ApiError
 */
export declare const getWorkContractClientRetrieve: () => CancelablePromise<GetWorkContractClientRetrieveResponse>;
/**
 * End contract
 * End contract
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export declare const postWorkContractClientTerminate: (data: PostWorkContractClientTerminateData) => CancelablePromise<PostWorkContractClientTerminateResponse>;
/**
 * End contract
 * End contract
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export declare const postWorkContractCraftspersonTerminate: (data: PostWorkContractCraftspersonTerminateData) => CancelablePromise<PostWorkContractCraftspersonTerminateResponse>;
/**
 * Get summary of metrics
 * Get summary of metrics
 * @returns MetricsSummaryResponse Success
 * @throws ApiError
 */
export declare const getWorkMetricsSummary: () => CancelablePromise<GetWorkMetricsSummaryResponse>;
//# sourceMappingURL=services.gen.d.ts.map