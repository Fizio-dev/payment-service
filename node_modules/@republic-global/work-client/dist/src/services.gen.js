import { OpenAPI } from './core/OpenAPI.js';
import { request as __request } from './core/request.js';
/**
 * Retrieve Metadata for work
 * Retrieve Metadata for work
 * @returns MetadataResponse Success
 * @throws ApiError
 */
export const getWorkMetadataRetrieve = () => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/work/metadata/retrieve',
    });
};
/**
 * Create or update work
 * Create or update work
 * @param data The data for the request.
 * @param data.requestBody
 * @returns CreateWorkResponse Success
 * @throws ApiError
 */
export const putWorkUpdate = (data) => {
    return __request(OpenAPI, {
        method: 'PUT',
        url: '/work/update',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Retrieve Work Details
 * Retrieve Work Details
 * @param data The data for the request.
 * @param data.workId Work ID
 * @returns WorkDetailsResponse Success
 * @throws ApiError
 */
export const getWorkDetailsByWorkId = (data) => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/work/details/{workId}',
        path: {
            workId: data.workId,
        },
    });
};
/**
 * Retrieve multiple work details by list of work ids
 * Retrieve multiple work details by list of work ids
 * @param data The data for the request.
 * @param data.requestBody
 * @returns RetrieveMultipleWorkDetailsResponse Success
 * @throws ApiError
 */
export const postWorkDetailsList = (data) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/work/details-list',
        body: data.requestBody,
        mediaType: 'application/json',
    });
};
/**
 * Retrieve list of work filtered and sorted
 * Retrieve list of work filtered and sorted
 * @param data The data for the request.
 * @param data.requestBody
 * @returns FilteredWorkListResponse Success
 * @throws ApiError
 */
export const postWorkRetrieveFilteredList = (data) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/work/retrieve-filtered-list',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Close a work posting
 * Close a work posting
 * @param data The data for the request.
 * @param data.workId Work ID
 * @returns unknown Success
 * @throws ApiError
 */
export const postWorkPostingCloseByWorkId = (data) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/work/posting/close/{workId}',
        path: {
            workId: data.workId,
        },
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Retrieve list of postings
 * Retrieve list of postings
 * @returns WorkPostingsClient Success
 * @throws ApiError
 */
export const getWorkPostingRetrieve = () => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/work/posting/retrieve',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Get active contract details
 * Get active contract details
 * @param data The data for the request.
 * @param data.workId Work ID
 * @returns WorkPostingsDetailsResponse Success
 * @throws ApiError
 */
export const getWorkPostingByWorkIdDetail = (data) => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/work/posting/{workId}/detail',
        path: {
            workId: data.workId,
        },
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Apply to Work
 * Apply to Work
 * @param data The data for the request.
 * @param data.requestBody
 * @returns ApplyWorkResponse Success
 * @throws ApiError
 */
export const postWorkCraftspersonApply = (data) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/work/craftsperson/apply',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Withdraw Application
 * Withdraw Application
 * @param data The data for the request.
 * @param data.applicationId
 * @returns unknown Success
 * @throws ApiError
 */
export const postWorkCraftspersonApplicationWithdrawByApplicationId = (data) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/work/craftsperson/application-withdraw/{applicationId}',
        path: {
            applicationId: data.applicationId,
        },
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Approve or Reject work
 * Approve or Reject work
 * @param data The data for the request.
 * @param data.requestBody
 * @returns WorkApprovalResponse Success
 * @throws ApiError
 */
export const postWorkCraftspersonWorkApproval = (data) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/work/craftsperson/work-approval',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Retrieve list of applications
 * Retrieve list of applications
 * @returns CraftspersonApplicationOverview Success
 * @throws ApiError
 */
export const getWorkCraftspersonApplicationsRetrieve = () => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/work/craftsperson/applications/retrieve',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Approve or Reject application
 * Approve or Reject application
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postWorkClientApplicationApproval = (data) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/work/client/application-approval',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Shortlist a craftsperson
 * Shortlist a craftsperson
 * @param data The data for the request.
 * @param data.requestBody
 * @returns ShortlistResponse Success
 * @throws ApiError
 */
export const postWorkClientShortlist = (data) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/work/client/shortlist',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Remove shortlist a craftsperson
 * Remove shortlist a craftsperson
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postWorkClientRemoveShortlist = (data) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/work/client/remove-shortlist',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Get list of Shortlisted craftsperson for a work
 * Get list of Shortlisted craftsperson for a work
 * @param data The data for the request.
 * @param data.workId Work ID
 * @returns RetrieveAllShortlistResponse Success
 * @throws ApiError
 */
export const getWorkClientShortlistByWorkIdRetrieve = (data) => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/work/client/shortlist/{workId}/retrieve',
        path: {
            workId: data.workId,
        },
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Get active contracts
 * Get active contracts
 * @returns CraftspersonActiveContractsResponse Success
 * @throws ApiError
 */
export const getWorkContractCraftspersonRetrieve = () => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/work/contract/craftsperson/retrieve',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Get active contracts
 * Get active contracts
 * @returns ClientActiveContractsResponse Success
 * @throws ApiError
 */
export const getWorkContractClientRetrieve = () => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/work/contract/client/retrieve',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * End contract
 * End contract
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postWorkContractClientTerminate = (data) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/work/contract/client/terminate',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * End contract
 * End contract
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Success
 * @throws ApiError
 */
export const postWorkContractCraftspersonTerminate = (data) => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/work/contract/craftsperson/terminate',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            400: 'Bad request',
        },
    });
};
/**
 * Get summary of metrics
 * Get summary of metrics
 * @returns MetricsSummaryResponse Success
 * @throws ApiError
 */
export const getWorkMetricsSummary = () => {
    return __request(OpenAPI, {
        method: 'GET',
        url: '/work/metrics/summary',
        errors: {
            400: 'Bad request',
        },
    });
};
//# sourceMappingURL=services.gen.js.map