export const initializeTopology = async (connection, opts) => {
    const setupChannel = connection.createChannel({
        json: true,
        setup: async (channel) => {
            await Promise.all([...opts.exchanges, ...(opts.deadLetterExchanges || [])].map(async (exchange) => {
                await channel.assertExchange(exchange.name, exchange.type, exchange.options);
            }));
            await Promise.all(opts.queues.map(async (queue) => {
                await channel.assertQueue(queue.name, {
                    durable: true,
                    ...queue.options,
                });
                for (const binding of queue.bindings) {
                    await channel.bindQueue(queue.name, binding.exchange, binding.routingKey);
                }
            }));
        },
    });
    await setupChannel.waitForConnect();
    await setupChannel.close();
};
//# sourceMappingURL=topology.js.map