{"version":3,"file":"crypto-aes.js","sourceRoot":"","sources":["../../../../src/commons/utils/crypto-aes.ts"],"names":[],"mappings":"AAAA,6DAA6D;AAC7D,cAAc;AACd,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AAErD,MAAM,mBAAmB,GAAG,CAAC,CAAC;AAC9B,MAAM,gBAAgB,GAAG,aAAa,CAAC;AAEvC,MAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC9C,MAAM,QAAQ,GAAG,EAAE,CAAC;AACpB,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;IACjB,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;AAChC,CAAC,CAAC,CAAC;AAEH,SAAS,UAAU,CAAC,KAAK,EAAE,EAAE,EAAE,SAAS;IACpC,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAC7C,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC/B,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAElC,MAAM,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,gBAAgB,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAChE,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAC1D,SAAS,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAEpC,OAAO;QACH,UAAU,EAAE,SAAS;QACrB,GAAG,EAAE,MAAM,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC;KAC9C,CAAC;AACN,CAAC;AAED,SAAS,UAAU,CAAC,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG;IAChD,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAC7C,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAEvC,MAAM,QAAQ,GAAG,MAAM,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACpE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEhD,IAAI,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;IACnE,SAAS,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC9B,OAAO,SAAS,CAAC;AACrB,CAAC;AAED,SAAS,MAAM,CAAC,YAAY;IACxB,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACzE,OAAO,MAAM;SACR,UAAU,CAAC,QAAQ,CAAC;SACpB,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC;SAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC1B,CAAC;AAED,SAAS,OAAO,CAAC,kBAAkB;IAC/B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACtB,OAAO,kBAAkB,CAAC;IAC9B,CAAC;IACD,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;IAC3C,IAAI,CAAC,QAAQ,EAAE,CAAC;QACZ,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;IACrC,CAAC;IACD,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,QAAQ,CAAC,EAAE,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;IACrC,CAAC;IACD,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9B,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AACnD,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,OAAO,CAAC,KAAK;IACzB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC7B,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IAC1C,CAAC;IACD,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACxC,MAAM,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IAC9B,IAAI,EAAE,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAChC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACxC,MAAM,CAAC,GAAG,UAAU,CAAC,KAAK,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;IAE3C,MAAM,MAAM,GAAG;QACX,CAAC,EAAE,mBAAmB;QACtB,GAAG,EAAE,gBAAgB;QACrB,GAAG,EAAE,CAAC,CAAC,GAAG;QACV,EAAE,EAAE,EAAE;QACN,GAAG,EAAE,GAAG;QACR,CAAC,EAAE,CAAC,CAAC,UAAU;KAClB,CAAC;IACF,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAClC,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,aAAa,CAAC,kBAAkB;IAC5C,OAAO,OAAO,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACzD,CAAC","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport crypto from 'crypto';\n\nimport { commonsConfig } from '../commons-config.js';\n\nconst CRYPTO_IMPL_VERSION = 1;\nconst CRYPTO_ALGORITHM = 'aes-256-gcm';\n\nconst DEKS = commonsConfig.dekList.split(',');\nconst DEKS_MAP = {};\nDEKS.forEach((dek) => {\n    DEKS_MAP[getKid(dek)] = dek;\n});\n\nfunction encryptAes(input, iv, base64Key) {\n    const key = Buffer.from(base64Key, 'base64');\n    iv = Buffer.from(iv, 'base64');\n    const buffer = Buffer.from(input);\n\n    const cipher = crypto.createCipheriv(CRYPTO_ALGORITHM, key, iv);\n    let encrypted = cipher.update(buffer, 'Buffer', 'base64');\n    encrypted += cipher.final('base64');\n\n    return {\n        ciphertext: encrypted,\n        tag: cipher.getAuthTag().toString('base64'),\n    };\n}\n\nfunction decryptAes(ciphertext, iv64, base64Key, tag) {\n    const key = Buffer.from(base64Key, 'base64');\n    const iv = Buffer.from(iv64, 'base64');\n\n    const decipher = crypto.createDecipheriv(CRYPTO_ALGORITHM, key, iv);\n    decipher.setAuthTag(Buffer.from(tag, 'base64'));\n\n    let decrypted = decipher.update(Buffer.from(ciphertext, 'base64'));\n    decrypted += decipher.final();\n    return decrypted;\n}\n\nfunction getKid(dek256Base64) {\n    const halfByteskey = Buffer.from(dek256Base64, 'base64').subarray(0, 16);\n    return crypto\n        .createHash('sha256')\n        .update(halfByteskey, 'utf8')\n        .digest('base64');\n}\n\nfunction decrypt(internalCiphertext) {\n    if (!internalCiphertext) {\n        return internalCiphertext;\n    }\n    const ict = JSON.parse(internalCiphertext);\n    if (!DEKS_MAP) {\n        throw new Error('DEKS_MAP_NULL');\n    }\n    if (!(ict.kid in DEKS_MAP)) {\n        throw new Error('DEK_NOT_FOUND');\n    }\n    const key = DEKS_MAP[ict.kid];\n    return decryptAes(ict.c, ict.iv, key, ict.tag);\n}\n\n/**\n * Encrypt an object to the internal representation ciphertext.\n *\n * @param input object\n */\nexport function encrypt(input) {\n    if (!DEKS || DEKS.length === 0) {\n        throw new Error('DEK_ARRAY_IS_EMPTY');\n    }\n    const latestDek = DEKS[DEKS.length - 1];\n    const kid = getKid(latestDek);\n    let iv = crypto.randomBytes(16);\n    iv = Buffer.from(iv).toString('base64');\n    const e = encryptAes(input, iv, latestDek);\n\n    const result = {\n        v: CRYPTO_IMPL_VERSION,\n        alg: CRYPTO_ALGORITHM,\n        tag: e.tag,\n        iv: iv,\n        kid: kid,\n        c: e.ciphertext,\n    };\n    return JSON.stringify(result);\n}\n\n/**\n * Decrypt an internal representation ciphertext to a string.\n *\n * @param internalCiphertext internal representation ciphertext\n */\nexport function decryptString(internalCiphertext) {\n    return decrypt(internalCiphertext).toString('utf-8');\n}\n"]}