{"version":3,"file":"header-injector.js","sourceRoot":"","sources":["../../../../src/commons/middleware/header-injector.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAElD,MAAM,MAAM,GAAG,aAAa,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;AAEnE,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,WAAwB,EAAe,EAAE;IACpE,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,WAAW,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;IACvD,MAAM,CAAC,IAAI,CAAC,6BAA6B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAEpE,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;IAChD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;IAE1C,MAAM,CAAC,IAAI,CAAC,2BAA2B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAElE,MAAM,kBAAkB,GAAG,EAAE,GAAG,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;IAChE,MAAM,CAAC,IAAI,CACP,uCAAuC,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE,CAC9E,CAAC;IAEF,OAAO,kBAAkB,CAAC;AAC9B,CAAC,CAAC","sourcesContent":["import { LoggerFactory } from '../utils/index.js';\n\nconst logger = LoggerFactory.getLogger('HeaderInjectorMiddleware');\n\nexport const headerInjector = (requestInit: RequestInit): RequestInit => {\n    const headers = new Headers(requestInit.headers || {});\n    logger.info(`Headers before injection: ${JSON.stringify(headers)}`);\n\n    headers.set('Content-Type', 'application/json');\n    headers.set('Accept', 'application/json');\n\n    logger.info(`Headers after injection ${JSON.stringify(headers)}`);\n\n    const updatedRequestInit = { ...requestInit, headers: headers };\n    logger.info(\n        `Request Init after header injection ${JSON.stringify(updatedRequestInit)}`\n    );\n\n    return updatedRequestInit;\n};\n"]}