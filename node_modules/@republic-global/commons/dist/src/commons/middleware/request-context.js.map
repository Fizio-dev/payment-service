{"version":3,"file":"request-context.js","sourceRoot":"","sources":["../../../../src/commons/middleware/request-context.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,iBAAiB,EAAE,MAAM,aAAa,CAAC;AAQhD,MAAM,iBAAiB,GAAG,IAAI,iBAAiB,EAAkB,CAAC;AAClE,MAAM,CAAC,MAAM,iBAAiB,GAAG,GAA+B,EAAE,CAC9D,iBAAiB,CAAC,QAAQ,EAAE,CAAC;AAEjC,MAAM,CAAC,MAAM,UAAU,GAAG,CACtB,GAAY,EACZ,GAAa,EACb,IAAkB,EACd,EAAE;IACN,MAAM,QAAQ,GAAmC,GAAG,CAAC,QAAQ,CAAC;IAC9D,MAAM,IAAI,GAA+B,GAAG,CAAC,IAAI,CAAC;IAElD,IAAI,QAAQ,IAAI,IAAI,EAAE,CAAC;QACnB,MAAM,cAAc,GAAmB,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;QAC1D,2CAA2C;QAC3C,iBAAiB,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;IAChD,CAAC;IACD,IAAI,EAAE,CAAC;AACX,CAAC,CAAC","sourcesContent":["import type {\n    CrowdCraftAuthInfo,\n    CrowdCraftUser,\n} from '@republic-global/auth-lib';\nimport { AsyncLocalStorage } from 'async_hooks';\nimport type { NextFunction, Request, Response } from 'express';\n\nexport interface RequestContext {\n    readonly user: CrowdCraftUser;\n    readonly authInfo: CrowdCraftAuthInfo;\n}\n\nconst asyncLocalStorage = new AsyncLocalStorage<RequestContext>();\nexport const getRequestContext = (): RequestContext | undefined =>\n    asyncLocalStorage.getStore();\n\nexport const jwtContext = (\n    req: Request,\n    res: Response,\n    next: NextFunction\n): void => {\n    const authInfo: CrowdCraftAuthInfo | undefined = req.authInfo;\n    const user: CrowdCraftUser | undefined = req.user;\n\n    if (authInfo && user) {\n        const requestContext: RequestContext = { user, authInfo };\n        // Store the authToken in AsyncLocalStorage\n        asyncLocalStorage.enterWith(requestContext);\n    }\n    next();\n};\n"]}