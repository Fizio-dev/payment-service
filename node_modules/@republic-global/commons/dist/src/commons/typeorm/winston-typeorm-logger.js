import { AbstractLogger, } from 'typeorm';
/**
 * Custom typeorm logger based on winston logger.
 */
export class WinstonTypeOrmLogger extends AbstractLogger {
    winstonLogger;
    constructor(winstonLogger, options) {
        super(options);
        this.winstonLogger = winstonLogger;
    }
    /**
     * Write log to specific output.
     */
    writeLog(level, logMessage, queryRunner) {
        const messages = this.prepareLogMessages(logMessage, {
            highlightSql: false,
            addColonToPrefix: false,
        });
        for (const message of messages) {
            switch (message.type ?? level) {
                case 'log':
                case 'schema-build':
                case 'migration':
                    this.winstonLogger.info(message.message);
                    break;
                case 'info':
                case 'query':
                    if (message.prefix) {
                        this.winstonLogger.info(message.message.toString(), WinstonTypeOrmLogger.buildMeta(message, level, queryRunner));
                    }
                    else {
                        this.winstonLogger.info(message.message);
                    }
                    break;
                case 'warn':
                case 'query-slow':
                    if (message.prefix) {
                        this.winstonLogger.warn(message.message.toString(), WinstonTypeOrmLogger.buildMeta(message, level, queryRunner));
                    }
                    else {
                        this.winstonLogger.warn(message.message);
                    }
                    break;
                case 'error':
                case 'query-error':
                    if (message.prefix) {
                        this.winstonLogger.error(message.message.toString(), WinstonTypeOrmLogger.buildMeta(message, level, queryRunner));
                    }
                    else {
                        this.winstonLogger.error(message.message);
                    }
                    break;
            }
        }
    }
    static buildMeta(message, level, queryRunner) {
        return {
            typeOrmMeta: {
                prefix: message.prefix,
                type: message.type,
                level: level,
                queryRunnerAdditionalData: queryRunner?.data,
            },
        };
    }
}
//# sourceMappingURL=winston-typeorm-logger.js.map