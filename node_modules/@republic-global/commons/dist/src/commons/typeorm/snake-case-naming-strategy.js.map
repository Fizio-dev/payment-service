{"version":3,"file":"snake-case-naming-strategy.js","sourceRoot":"","sources":["../../../../src/commons/typeorm/snake-case-naming-strategy.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,qBAAqB,EAAE,MAAM,SAAS,CAAC;AAEhD,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAElD;;GAEG;AACH,MAAM,OAAO,uBAAwB,SAAQ,qBAAqB;IACrD,SAAS,CAAC,SAAiB,EAAE,UAAkB;QACpD,OAAO,UAAU,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC;IAC9C,CAAC;IAEQ,UAAU,CACf,YAAoB,EACpB,UAAkB,EAClB,gBAA0B;QAE1B,OAAO,CACH,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrC,CAAC,UAAU,IAAI,SAAS,CAAC,YAAY,CAAC,CAAC,CAC1C,CAAC;IACN,CAAC;IAEQ,YAAY,CAAC,YAAoB;QACtC,OAAO,SAAS,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;CACJ","sourcesContent":["import { DefaultNamingStrategy } from 'typeorm';\n\nimport { snakeCase } from '../helpers/strings.js';\n\n/**\n * Snake case naming strategy for typeorm.\n */\nexport class SnakeCaseNamingStrategy extends DefaultNamingStrategy {\n    override tableName(className: string, customName: string): string {\n        return customName || snakeCase(className);\n    }\n\n    override columnName(\n        propertyName: string,\n        customName: string,\n        embeddedPrefixes: string[]\n    ): string {\n        return (\n            snakeCase(embeddedPrefixes.join('_')) +\n            (customName || snakeCase(propertyName))\n        );\n    }\n\n    override relationName(propertyName: string): string {\n        return snakeCase(propertyName);\n    }\n}\n"]}