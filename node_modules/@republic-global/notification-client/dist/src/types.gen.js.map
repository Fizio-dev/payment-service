{"version":3,"file":"types.gen.js","sourceRoot":"","sources":["../../src/types.gen.ts"],"names":[],"mappings":"AAAA,qDAAqD","sourcesContent":["// This file is auto-generated by @hey-api/openapi-ts\n\nexport type MappedEvent =\n    | 'WORK_CLIENT_CONTRACT_ACCEPTED'\n    | 'WORK_CLIENT_CONTRACT_ENDED'\n    | 'WORK_CLIENT_JOB_POSTING_APPLICATION'\n    | 'WORK_CRAFTSPERSON_APPLICATION_ACCEPTED'\n    | 'WORK_CRAFTSPERSON_CONTRACT_ENDED';\n\nexport type AsyncNotificationRequest = {\n    /**\n     * Originator of the notification\n     */\n    originator: string;\n    /**\n     * unique id of the event\n     */\n    eventId: string;\n    /**\n     * Type of event\n     */\n    event: string;\n    referenceId: string;\n    /**\n     * ID of the notification template, only required if email is not being triggered for known events\n     */\n    templateId?: string | null;\n    data: Array<NotificationData>;\n};\n\nexport type NotificationRequest = {\n    /**\n     * Originator of the notification\n     */\n    originator: string;\n    /**\n     * unique id of the event\n     */\n    eventId: string;\n    /**\n     * Type of event\n     */\n    event: string;\n    /**\n     * ID of the notification template\n     */\n    templateId: string;\n    data: Array<NotificationData>;\n};\n\nexport type NotificationData = EmailNotificationData;\n\nexport type EmailNotificationData = CommonNotificationData & {\n    from?: string;\n    /**\n     * Recipient email address\n     */\n    to?: Array<string>;\n} & {\n    /**\n     * Recipient email address\n     */\n    to: Array<string>;\n};\n\nexport type CommonNotificationData = {\n    /**\n     * Sender of the notification\n     */\n    from?: string;\n    /**\n     * Channel of notification (sms, email, etc.)\n     */\n    channel: 'email';\n    /**\n     * Properties to be filled into subject\n     */\n    subjectProps?: {\n        [key: string]: string;\n    };\n    /**\n     * Properties to be filled into body\n     */\n    bodyProps?: {\n        [key: string]: string;\n    };\n};\n\n/**\n * Channel of notification (sms, email, etc.)\n */\nexport type channel = 'email';\n\nexport type NotificationResponse = {\n    notificationIds?: Array<string>;\n};\n\nexport type ErrorResponse = {\n    code?: string;\n    message?: string;\n};\n\nexport type SendNotificationData = {\n    requestBody: NotificationRequest;\n};\n\nexport type SendNotificationResponse = NotificationResponse;\n\nexport type $OpenApiTs = {\n    '/notifications': {\n        post: {\n            req: SendNotificationData;\n            res: {\n                /**\n                 * Notification sent successfully\n                 */\n                200: NotificationResponse;\n                /**\n                 * Bad request\n                 */\n                400: ErrorResponse;\n            };\n        };\n    };\n};\n"]}